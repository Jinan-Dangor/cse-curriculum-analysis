[{"Course Code": "BINF3020", "Course Name": "Computational Bioinformatics", "Course Name - SiMs": "Computational Bioinformatics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Algorithms and representations in DNA and protein sequence analysis: string matching and alignment, tree building methods, hidden Markov models and other statistical representations, genome assembly and mapping. Computational representations in systems biology including Boolean and Bayesian networks. Optimisation and machine learning approaches used in bioinformatics.", "Field of Education (Broad)": "010000 Natural and Physical Sciences", "Field of Education (Narrow)": "010900 Biological Sciences", "Field of Education (Detailed)": "010999 Biological Sciences not elsewhere classified", "Level": "Level 3", "Teaching Strategies and Rationale": "Lectures on algorithms used I\u0010n computational biology are complemented by programming assignments and tutorials on implementing and applying these algorithms", "Course Aims": "Explain, implement and apply the major computational methods used in biological sequence, genome and systems biology data analysis", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [{"Code": "CLO1", "Description": "Define key computational and statistical concepts in bioinformatics approaches to pairwise and multiple sequence alignment, and reproduce, explain and apply the corresponding methods"}, {"Code": "CLO2", "Description": "Define and apply key algorithms and representations in biological sequence analysis including Hidden Markov Models, clustering and classification, and whole genome assembly and mapping"}, {"Code": "CLO3", "Description": "Express and apply key concepts from graph theory to model biological networks"}, {"Code": "CLO4", "Description": "Research, use and explain selected engineering approaches to the representation, execution and evaluation of models of biological processes and their application in systems biology"}, {"Code": "CLO5", "Description": "Research and present on a range of open source software tools and techniques available to bioinformatics software developers and use at least one of these in their own software development projects"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Mid-semester Exam", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}, {"Assessment Type": "Other", "Assessment Name": "Individual Assignment: Protein Sequence Evolution", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "Group Assignments", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Jointly Taught", "Related Course": "BINF9020 Computational Bioinformatics 2021.01"}], "Handbook Information": {"Title": "BINF3020 Course Outline", "URL": "http://www.cse.unsw.edu.au/~bi3020/"}}, {"Course Code": "BINF6112", "Course Name": "Computational Biology Engineering Design Workshop", "Course Name - SiMs": "Bioinformatics Project B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Through a practical software project and targeted lectures this course examines various issues in the design and implementation of software systems for the analysis of large complex biological datasets and the application of mathematical and statistical methods to problems in modern life science. Example domains include analysis of gene expression and function, networks of interaction, and systems modeling.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "Teaching Strategies\n\u00b7      The lectures in the first half ofthroughout the course introduce major concepts of engineering methods in computational biology and biological system modeling. Lectures are supplemented by tutorials and practical labs that require students to implement algorithms discussed in lectures and design solutions to practical problems\n\u00b7      A major project enables the students to work as a team to apply the lecture/tutorial content and design and implement a complex computational software platform, using agile project management methods, and reporting progress through presentations and documentation\nTeaching Rationale\nThis is a practical course that requires students to learn by doing. Students undertake a group project with set milestones throughout the session, including presentations, software demonstrations, and submission of reports and documentation. The project is complemented by a series of lectures and assessment tasks on the computational biology algorithms that underlie the project.", "Course Aims": "Through a practical software project this course examines various issues in the design and implementation of software systems for the analysis of large complex biological datasets and the application of mathematical and statistical methods to problems in modern life science. Example domains include analysis of gene expression and function, networks of interaction, and systems modeling.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO2", "Description": " Elicit requirements for a complex bioinformatics software system from domain experResearch and present on a range of open source software tools and techniques available to bioinformatics software developers and use at least one of these in your own software development projects"}, {"Code": "CLO3", "Description": " Identify suitable technologies and components for implementing a system meeting the specificationsDefine and apply methods of clustering and classification in analysis of genome-scale data"}, {"Code": "CLO5", "Description": " Demonstrate teamwork and communication skills necessary for working as part of a team under strict time and budget constraintExpress and apply key concepts from graph theory to model biological networks"}, {"Code": "CLO6", "Description": " Prepare and deliver oral presentations for a range of stakeholdersResearch, use and explain selected engineering approaches to the representation, execution and evaluation of models of biological processes and their application in systems biology"}, {"Code": "CLO1", "Description": " Demonstrate advanced practical design skills, particularly in software component integration and data management systems"}, {"Code": "CLO4", "Description": " Successfully manage a project to completion in the light of complex requirements and tight budgets and schedules"}, {"Code": "CLO8", "Description": " Communicate with stakeholders from a different background, especially domain experts in biology, through reports, presentations and documentation"}, {"Code": "CLO7", "Description": "Write a manuscript describing a bioinformatics software system suitable for scientific publication"}, {"Code": "CLO9", "Description": "Understand ethical and legal issues associated with bioinformatics software systems especially concerning personal privacy, licensing and intellectual property"}, {"Code": "CLO1", "Description": " Discuss the need for a suitable user interface for users of a different background"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Major Project", "Weighting (%)": "40"}, {"Assessment Type": "Presentation", "Assessment Name": "Seminar", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "Tutorials and Labs", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Major project", "Weighting (%)": "60"}, {"Assessment Type": "Presentation", "Assessment Name": "Presentation", "Weighting (%)": "10"}, {"Assessment Type": "Report", "Assessment Name": "Manuscript", "Weighting (%)": "30"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "40"}], "Relationships": [], "Handbook Information": {"Title": "BINF6112 Course Outline", "URL": "http://www.cse.unsw.edu.au/~bi6112/"}}, {"Course Code": "BINF9020", "Course Name": "Computational Bioinformatics", "Course Name - SiMs": "Computational Bioinformatics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Algorithms and representations in DNA and protein sequence analysis: string matching and alignment, tree building methods, hidden Markov models and other statistical representations.representations, genome assembly and mapping. Computational representations in systems biology including Boolean and Bayesian networks. Optimisation and machine learning approaches used in bioinformatics.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "039900 Other Engineering and Related Technologies", "Field of Education (Detailed)": "039903 Biomedical Engineering", "Level": "", "Teaching Strategies and Rationale": "Lectures on algorithms used I\u0010n computational biology are complemented by programming assignments and tutorials on implementing and applying these algorithms", "Course Aims": "Explain, implement and apply the major computational methods used in biological sequence, genome and systems biology data analysis", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [{"Code": "CLO1", "Description": "Define key computational and statistical concepts in bioinformatics approaches to pairwise and multiple sequence alignment, and reproduce, explain and apply the corresponding methods"}, {"Code": "CLO2", "Description": "Define and apply key algorithms and representations in biological sequence analysis including Hidden Markov Models, clustering and classification, and whole genome assembly and mapping"}, {"Code": "CLO3", "Description": "Express and apply key concepts from graph theory to model biological networks"}, {"Code": "CLO4", "Description": "Research, use and explain selected engineering approaches to the representation, execution and evaluation of models of biological processes and their application in systems biology"}, {"Code": "CLO5", "Description": "Research and present on a range of open source software tools and techniques available to bioinformatics software developers and use at least one of these in their own software development projects"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Mid-semester Exam", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}, {"Assessment Type": "Assignment", "Assessment Name": "Individual Assignment: Protein Sequence Evolution", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Group Assignments", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Jointly Taught", "Related Course": "BINF3020 Computational Bioinformatics 2021.01"}], "Handbook Information": {"Title": "BINF9020 Course Outline", "URL": "http://www.cse.unsw.edu.au/~bi9020/"}}, {"Course Code": "COMP1000", "Course Name": "Introduction to World Wide Web, Spreadsheets and Databases", "Course Name - SiMs": "Web, Spreadsheets & Databases", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "World wide web(WWW) dependent activities have become an essential part of our existence and yet many of us do not know much about how they works. In the first part of this course, we introduce the abstract features of the internet and the software that makes it so powerful. Knowledge about the architecture of the internet, world wide web, browsers, search engines, e-commerce, security, etc. will be helpful in using the internet more effectively as well as becoming aware of the several pifalls associated with this modern technology.\nSpreadsheets and databases are two of the most commonly used and powerful computer tools yet they are often poorly utilised and the reasons for using one rather than the other are poorly understood. Many people purchase Microsoft Office which comes bundled with Microsoft Excel and Microsoft Access - a spreadsheet and a database application - yet while many people have some familiarity with Microsoft Excel, Microsoft Access is rarely utilised. This course aims to explain in straightforward terms the concepts underlying both of these powerful pieces of software so that students can exploit them effectively for both their studies and future careers. It will investigate how to design and implement effective spreadsheet and database applications. Students should also be able to transfer these skills to other, similar spreadsheet and database packages. Students will be expected to have personal copies of Microsoft Excel and Microsoft Access on their own computers.\nNote(s): This course may not be taken by students enrolled in an Engineering program.", "Field of Education (Broad)": "090000 Humanities and Law020000 Information Technology", "Field of Education (Narrow)": "092100 Sport and Recreation020300 Information Systems", "Field of Education (Detailed)": "092101 Sport and Recreation Activities020399 Information Systems not elsewhere classified", "Level": "Level 1", "Teaching Strategies and Rationale": "", "Course Aims": "World wide web (WWW) dependent activities have  become  an essential part of our existence and yet many of us do not know much about how they work. In the first part of this course, we introduce the abstract features of the internet and the  software that make it so powerful. Knowledge about the architecure of the internet, world wide web, browsers, seach engines, e-commerce, security, etc.  will be helful in using the internet more effectively and be aware of the several pifalls  associated with this modern technology.\nSpreadsheets and databases are powerful and useful tools that students can use to greatly assist in their studies and their future careers. Unfortunately, the reasons for when it is appropriate to use one rather than the other are very poorly appreciated. Furthermore, while many students have some familiarity with spreadsheet applications like Microsoft Excel, they usually have no idea of how to use databases like Microsoft Access even though they are both bundled together in Microsoft Office. This course aims to explain in straightforward terms the concepts underlying spreadsheets and databases and the advantages of both these powerful pieces of software so that students can exploit them effectively.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Design and build spreadsheet applications using Microsoft Excel."}, {"Code": "CLO2", "Description": "Design and build database applications using Microsoft Access."}, {"Code": "CLO3", "Description": "Transfer these skills to other similar spreadsheet and database packages."}, {"Code": "CLO4", "Description": "Understand how internet works and use the internet more  effectly being aware of the pitfalls involved."}, {"Code": "CLO5", "Description": "Build own web pages"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Lab work", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Mid Exam", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP0011 Fundamentals of Computing 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "GENE8000 Getting the most out of Spreadsheet and Database Applications 2021.01"}], "Handbook Information": {"Title": "COMP1000 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1000/"}}, {"Course Code": "COMP1010", "Course Name": "The Art of Computing", "Course Name - SiMs": "The Art of Computing", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Computational thinking is a critical skill in modern society. This course aims to provide you with an understanding of the foundations of computing, how software systems work, and how to construct new software systems. By the end of the course, you will have produced an application (app) of your choice, solving a problem that's important to you.\nTopics: computer systems, computational problem solving, spreadsheets, programming in Python, interfaces.\nNote: This course is intended for students with no computing background, who wish to develop their knowledge of Python and computational problem solving. This course does not satisfy the L1 Engineering computing elective requirement (ie. it cannot be used to replace ENG1811 or COMP1911). Computer Science students with no prior computing experience could take this course as a Level 1 elective prior to taking COMP1511, but are strongly encouraged to enrol directly in COMP1511 and learn Python in COMP1531.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "Level 1", "Teaching Strategies and Rationale": "Lectures will illustrate techniques for solving problems via computer. Tutorials and lab classes will allow students to practice these techniques, and project work will allow students to explore the ideas in more depth. Project work will be carried out in teams to allow more complex problems to be solved.", "Course Aims": "This course aims to provide a grounding in programming and computational thinking for any undergraduate interested in learning these essential skills. It assumes no previous programming background, but does assume that all incoming students have used digital devices, such as tablets and smart phones, for a range of tasks (e.g. social networking, reading, essay writing, etc.). The course will use Python as the programming medium.\nTopics: computer systems, computational problem solving, spreadsheets, programming in Python.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to use a spreadsheet for simple data management tasks."}, {"Code": "CLO2", "Description": "Be able to solve problems via computer systems."}, {"Code": "CLO3", "Description": "Be able to write Python programs to solve simple computational problems."}, {"Code": "CLO4", "Description": "Be able to build simple human-centered interfaces to computers."}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Online Quizzes", "Weighting (%)": "15"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab Exercises", "Weighting (%)": "15"}, {"Assessment Type": "Project", "Assessment Name": "Major Project", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "ENGG1811 Computing for Engineers 2021.01"}], "Handbook Information": {"Title": "COMP1010 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1010/"}}, {"Course Code": "COMP1400", "Course Name": "Programming for Designers", "Course Name - SiMs": "Programming for Designers", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "An introduction to the concepts and techniques of object oriented programming with a focus on the construction of interactive multimedia applications. Delivery is through lectures and computer lab classes. Assessment will be via a number of in-class exercises and staged assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 1", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "INFS1609 Fundamentals of Business Programming 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "INFS2609 Programming for Business 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "INFS1609 Fundamentals of Business Programming 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "INFS2609 Programming for Business 2021.01"}], "Handbook Information": {"Title": "COMP1400 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1400/"}}, {"Course Code": "COMP1511", "Course Name": "Programming Fundamentals", "Course Name - SiMs": "Programming Fundamentals", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "An introduction to problem-solving via programming, which aims to have students develop proficiency in using a high level programming language. Topics: algorithms, program structures (statements, sequence, selection, iteration, functions), data types (numeric, character), data structures (arrays, tuples, pointers, lists), storage structures (memory, addresses), introduction to analysis of algorithms, testing, code quality, teamwork, and reflective practice. The course includes extensive practical work in labs and programming projects.\nAdditional Information\nThis course should be taken by all CSE majors, and any other students who have an interest in computing or who wish to be extended. It does not require any prior computing knowledge or experience.\nCOMP1511 leads on to COMP1521, COMP1531, COMP2511 and COMP2521, which form the core of the study of computing at UNSW and which are pre-requisites for the full range of further computing courses.\nDue to overlapping material, students who complete COMP1511 may not also enrol in COMP1911 or COMP1921. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 1", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The blog will assist in developing students ability to reflect on their own work. Tutorials will provide a forum for students to develop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.", "Course Aims": "COMP1511 aims to introduce students to the principles and practice of programming, to develop teamwork and reflective skills, and to prepare a foundation for the future study of computing.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "understand the core syntax & semantics of the C programming language including types, I/O, arrays, functions, pointers, structs, file manipulation and dynamic memory allocationwrite programs in the C programming language"}, {"Code": "CLO2", "Description": "givenanalyse a problem, and solve it by proficiently constructing (designing, testing, debugging) a secure, reliable and correct Cusing programming"}, {"Code": "CLO3", "Description": "understand & employ fundamental data structures including arrays, stacks, queues, and linked lists debug and test code and programs"}, {"Code": "CLO4", "Description": "use Linux and other Unix-like operating systems to develop and test softwarebasic data structures like arrays and linked lists"}, {"Code": "CLO5", "Description": "reflect on their programming and develop the ability to continually improve their skillsuse the basics of a Linux-like, command-line-driven operating system"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Laboratory Work", "Weighting (%)": "13"}, {"Assessment Type": "Test", "Assessment Name": "Weekly Tests", "Weighting (%)": "7"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignments", "Weighting (%)": "26"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "54"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "DPST1091 Introduction to Programming 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP1917 Computing 1 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "DPST1091 Introduction to Programming 2021.01"}], "Handbook Information": {"Title": "COMP1511 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1511/"}}, {"Course Code": "COMP1521", "Course Name": "Computer Systems Fundamentals", "Course Name - SiMs": "Computer Systems Fundamentals", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course provides a programmer's view on how a computer system executes programs, manipulates data and communicates. It enables students to become effective programmers in dealing with issues of performance, portability, and robustness. It is typically taken in the term after completing COMP1511, but could be delayed and taken later. It serves as a foundation for later courses on networks, operating systems, computer architecture and compilers, where a deeper understanding of systems-level issues is required.\nTopics:\nIntroduction to the systems-level view of computing, number representation, machine-level programming, representing high-level programs in machine code, memory, input/output, system architectures, operating systems, networks, parallelism/concurrency, communication/synchronisation. Labs and assignment work in C and machine code.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "Level 1", "Teaching Strategies and Rationale": "Lectures, laboratory exercises, take-home programming assignments", "Course Aims": "Provides a programmer's view on how a computer system executes programs, manipulates data and communicates\nEnables students to become effective programmers in dealing with issues of performance, portability, and robustness\nServes as a foundation for later courses on networks, operating systems, computer architecture and compilers, where a deeper understanding of systems-level issues is required", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "dDescribe the layers of architecture inal layers (fundamental parts) of a modern computer systems from hardware device (chip) levels upwards"}, {"Code": "CLO2", "Description": "eExplain how the major components of a CPU work together, including how data and instructions are represented in a computer"}, {"Code": "CLO3", "Description": "dDesign, implement, and analyse small programs at the assembly/machine level"}, {"Code": "CLO4", "Description": "dDescribe the relationship between a high-level procedural languages (e.g., C) and assembly/ (machine language in the conventional machine layer,) which implements it including how a compiled program is executed in a classical von Neumann machine"}, {"Code": "CLO5", "Description": "dDescribe the components ofcomprising, and the services offered by, moderan operating systems, including file systems, virtual memory, processes, and communication primitives"}, {"Code": "CLO6", "Description": "eExplain how input/output operations are implemented, and describe some basic I/O devices"}, {"Code": "CLO7", "Description": "dDescribe the layered structure of standard TCP/IP network  architectureprinciples of memory management and explain the workings of a system with virtual memory management"}, {"Code": "CLO8", "Description": "iImplement Csimple programs using Posix system calls for file system management, process control, inter-process communicationinvolving communication and concurrency"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}, {"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignments", "Weighting (%)": "20"}, {"Assessment Type": "Lab", "Assessment Name": "work Labs", "Weighting (%)": "10"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "DPST1092 Computer Systems Fundamentals 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "DPST1092 Computer Systems Fundamentals 2021.01"}], "Handbook Information": {"Title": "COMP1521 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1521/"}}, {"Course Code": "COMP1531", "Course Name": "Software Engineering Fundamentals", "Course Name - SiMs": "Software Eng Fundamentals", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course provides an introduction to software engineering principles: basic software lifecycle concepts, modern development methodologies, conceptual modeling and how these activities relate to programming. It also introduces the basic notions of team-based project management via conducting a project to design, build and deploy a simple web-based application. It is typically taken in the term after completing COMP1511, but could be delayed and taken later. It provides essential background for the teamwork and project management required in many later courses.\nThe goal of this course is to expose the students to:\nbasic elements of software engineering: including requirements elicitation, analysis and specification; design; construction; verification and validation; deployment; and operation and maintenance\ndata modelling\nsoftware engineering methodologies, processes, measurements, tools and techniques\nWeb-based system architecture and development practices on Web platforms", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 1", "Teaching Strategies and Rationale": "Lectures will provide a summary of the material, but the primary learning environment will be the group project. Tutorials will allow students to discuss principles and practice design. Lab classes will allow them to practice with relevant tools. Group meetings will allow students to discuss design and implementation strategies.", "Course Aims": "This course aims to expose students to:\nbasic elements of software engineering - derived from the lifecycle of a software system, including requirements elicitation, analysis and specification; design; construction; verification and validation; deployment; and operation and maintenance\nsoftware engineering methodologies, processes, measurements, tools and techniques\nWeb-based system architecture and development practices on Web platforms\nteam-based software project development", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Identify the complexities of software design and development, including design smells and common best design practices"}, {"Code": "CLO1", "Description": "describe the phases of software development and life-cycle of software - and illustrate them from experience"}, {"Code": "CLO2", "Description": "Analyse a problem domain and elicit user requirement using industry-used methods"}, {"Code": "CLO2", "Description": "effectively choose and use a range of project management and software development tools"}, {"Code": "CLO3", "Description": "Understand modern tools available to engage in deployment of web-based applications"}, {"Code": "CLO3", "Description": "describe common behaviour that contribute to the effective functioning of a team and identify necessary roles in a software development team"}, {"Code": "CLO4", "Description": "Demonstrate effective use of applying the python programming language to solve problems"}, {"Code": "CLO4", "Description": "articulate software design principles and use a design paradigm to design a simple software system (e.g., simple Web application in MVC)"}, {"Code": "CLO5", "Description": "Demonstrate proficiency in use of system schematics, data modelling, and state modelling, to analyse complex software systems"}, {"Code": "CLO5", "Description": "demonstrate robust coding practices (e.g., handling exceptions, following coding standards)"}, {"Code": "CLO6", "Description": "Demonstrate effective usage of testing fundamentals (e.g., unit tests, integration tests, test plan/cases, test automation)"}, {"Code": "CLO6", "Description": "describe effective coding validation and verification techniques (e.g., code reviewing, fault logging, a range of test measures)"}, {"Code": "CLO7", "Description": "Describe the phases of software development and life-cycle of software - and illustrate them from experience"}, {"Code": "CLO7", "Description": "demonstrate effective usage of testing fundamentals (e.g., unit tests, integration tests, test plan/cases, test automation)"}, {"Code": "CLO8", "Description": "Reflect on the choice of software engineering methodology (e.g, waterfall, agile) used in a project"}, {"Code": "CLO9", "Description": "Understand agile software development practices and conducting analysis, design, implementation and testing in the context of an agile framework"}, {"Code": "CLO1", "Description": " Describe common behavior that contribute to the effective functioning of a team and identify necessary roles in a software development team based on agile software practices"}, {"Code": "CLO1", "Description": " Understand and apply Git as a source code management tool and as a medium for collaborating in the development of software applications"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Major Project", "Weighting (%)": "36"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab Activities", "Weighting (%)": "14"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab Work", "Weighting (%)": "10"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "SENG1020 Software Engineering Workshop 1B 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "SENG1031 Software Engineering Workshop 1 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "SENG1010 Software Engineering Workshop 1A 2021.01"}], "Handbook Information": {"Title": "COMP1531 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1531/"}}, {"Course Code": "COMP1911", "Course Name": "Computing 1A", "Course Name - SiMs": "Computing 1A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course introduces students to the basics of programming. The objective of the course is for students to develop proficiency in program design and construction using a high-level programming language. Topics covered include: fundamental programming concepts, the C programming language, programming style, program design and organisation, program testing and debugging. Practical experience of these topics is supplied through laboratory exercises and programming assignments.\nAdditional Information:\nThis course is designed for non-computing majors who want a solid introduction to programming, with the aim of using computers as part of some other discipline. It does not assume any prior background in programming.\nElectrical Engineering, Telecommunications, Mechanical Engineering, and Mechatronic Engineering specify this as the standard first year computing course. COMP1911 and the following course COMP1521 provide a solid introduction to programming an computer systems concepts for all of these students.\nStudents with an interest in computing or who wish to be extended might want to consider COMP1511 as an alternative, especially if they plan to study more computing as part of their future study. Students from all degrees are permitted to take COMP1511 instead of COMP1911.\nNote: Because of significant content overlap, students cannot take both COMP1911 and COMP1511.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 1", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand fundamental procedural programming concepts including basic data representation."}, {"Code": "CLO2", "Description": "Design, implement, test and debug complete C programs to solve specified problems."}, {"Code": "CLO3", "Description": "Understand good practice for program organisation and programming style."}], "Assessments": [{"Assessment Type": "Other", "Assessment Name": "Lab Work", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Jointly Taught", "Related Course": "COMP1091 Solving Problems with Software and Tools 2021.01"}], "Handbook Information": {"Title": "COMP1911 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs1911/"}}, {"Course Code": "COMP1921", "Course Name": "Computing 1B", "Course Name - SiMs": "Computing 1B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Covers the topics of COMP1917 not covered in COMP1911. Including: approaches to problem solving, abstraction, low level structure of memory, memory allocation, stack frames, secure coding practice, recursion, linked lists.Introduction to ADTs. Introduction to simple binary trees. Also reinforces concepts introduced in COMP1911: style, unti testing, team programming, groupwork.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020111 Data Structures", "Level": "Level 1", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [{"Code": "CLO1", "Description": "Devise algorithmic solutions for well-specified problems and express these solutions as C programs"}, {"Code": "CLO2", "Description": "Develop suites of test cases to ascertain the accuracy and robustness of your programs"}, {"Code": "CLO3", "Description": "Repair any errors discovered in testing, and analyse and improve the performance of your programs"}, {"Code": "CLO4", "Description": "Understand and explain the run-time behaviour of your programs at the machine level"}, {"Code": "CLO5", "Description": "Make effective use of a number of common, useful data structures"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Labs", "Weighting (%)": "10"}, {"Assessment Type": "Test", "Assessment Name": "Quiz - Week 9", "Weighting (%)": "15"}, {"Assessment Type": "Other", "Assessment Name": "Assignment", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "Quiz - Week 4", "Weighting (%)": "5"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam (non-coding)", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam (coding)", "Weighting (%)": "35"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP1917 Computing 1 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP2091 Computing 2 2021.01"}], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP2041", "Course Name": "Software Construction: Techniques and Tools", "Course Name - SiMs": "Software Construction", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Software system decomposition and design. Overview of the software development life-cycle. Command languages. Version control and configuration management, programming for reliability. Testing and debugging techniques. Profiling and code improvement techniques. Practical work involving programming-in-the-large.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 2", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have practical experience in programming the scripting languages Perl,Program with Unix shell and Python.erl"}, {"Code": "CLO2", "Description": "Have a broader & deeper knowledge of buildingBuild large software systems"}, {"Code": "CLO3", "Description": "MorUse appreciation of the use of specificopriate technologies and strategies duringfor software development"}, {"Code": "CLO4", "Description": "Exposure to tools for version control, performance improvement, configuration and debugging,"}, {"Code": "CLO5", "Description": "Improvement of your ability to articulate & communicate concepts related to programming & systems"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1s", "Weighting (%)": "1530"}, {"Assessment Type": "AssignmentTest", "Assessment Name": "Assignment 2Tests", "Weighting (%)": "150"}, {"Assessment Type": "Other", "Assessment Name": "Lab Work", "Weighting (%)": "105"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "6045"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9044 Software Construction: Techniques and Tools 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9044 Software Construction: Techniques and Tools 2021.01"}], "Handbook Information": {"Title": "COMP2041 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs2041/"}}, {"Course Code": "COMP2111", "Course Name": "System Modelling and Design", "Course Name - SiMs": "System Modelling and Design", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course introduces rigorous and formal methods for modelling system behaviour. These methods support the modelling of abstract specifications and the refinement of abstract specifications through to concrete implementations. Consistency of formal development is verified by proof obligations and formal proof. The course will cover: specification, refinement, implementation, proof obligations, and proof. It re-inforces, and builds on, prerequisite knowledge from MATH1081, especially set theory and predicate logic. The course will use case-studies and assignments to develop competence. The methods developed in this course are used in the SENG2011 workshops and in safety-critical industrial contexts.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "Level 2", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "appreciate the relevance of discrete mathematics to computing"}, {"Code": "CLO2", "Description": " make effective use of discrete mathematics concepts"}, {"Code": "CLO3", "Description": "carry out rigorous reasoning about computing artefacts"}, {"Code": "CLO4", "Description": "effectively employ a toolkit of formal modelling approaches frequently used in computing"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "3 Assignments", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "final exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP2110 Software System Specification 2021.01"}], "Handbook Information": {"Title": "COMP2111 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs2111/"}}, {"Course Code": "COMP2121", "Course Name": "Microprocessors and Interfacing", "Course Name - SiMs": "Microprocessors & Interfacing", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Instruction Set Architecture (ISA), Floating point number representation, computer arithmetic, assembly and machine language programming, machine language fundamentals; addressing modes; instruction repertoire, assembly language programming methodology, interrupts and I/O interfacing (hardware and software), serial communication, timers, analog input and output, converting analog signals to digital signals (data acquisition), taking input from a variety of sensors and driving actuators, buses and memory system, low level device drivers.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 2", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "know the fundamentals of microprocessors and microcontrollers"}, {"Code": "CLO2", "Description": "understand how C programs are converted into AVR machine instructions"}, {"Code": "CLO3", "Description": "be proficient in AVR assembly language programming"}, {"Code": "CLO4", "Description": "understand typical interface designs between hardware and software"}, {"Code": "CLO5", "Description": "understand how serial communication works"}, {"Code": "CLO6", "Description": "understand how analog signals are converted into digital signals and vice versa"}, {"Code": "CLO7", "Description": "develop skills for microprocessor / microcontroller applications"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Lab Exercises", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "15"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "ELEC2142 Embedded Systems Design 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "MTRN3200 Elements of Mechatronic Systems 2021.01"}], "Handbook Information": {"Title": "COMP2121 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs2121/"}}, {"Course Code": "COMP2511", "Course Name": "Object-Oriented Design & Programming", "Course Name - SiMs": "O-O Design & Programming", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course aims to introduce students to the principles of object-oriented design and to fundamental techniques in object-oriented programming. It is typically taken in the second year of study, after COMP2521, to ensure an appropriate background in data structures. The knowledge gained in COMP2511 is useful in a wide range of later-year CS courses.\nThe goal of the course is to expose students to:\nthe fundamental principles of object-oriented design\nobject-oriented programming and object-oriented design in Java\nthe application of sound programming and design skills\nproblem solving and modeling of real world problems from science, engineering, and economics using the object-oriented paradigm\nTopics:\nObjects. Object-oriented design. Design patterns. Design by contract. Object-oriented programming in Java. Practical work: labs, design project, implementation project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 2", "Teaching Strategies and Rationale": "Lectures will provide a summary of the material, but the primary learning environment will be the labs and assignments. Tutorials will allow students to discuss principles, analyse designs, and practice design. Lab classes will allow them to practice with relevant tools.", "Course Aims": "This course aims to:\nprovide an ntroductionintroduction of the fundamental principles of object-oriented design\nprovide an introduction to object-oriented programming and object-oriented design in Java\nhelp students develop sound programming and design skills, problem solving and modeling of real world problems from science, engineering, and economics using the object-oriented paradigm", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "apply object-oriented design principles and design patterns effectively, to design flexible, maintainable and reusable systems"}, {"Code": "CLO1", "Description": "design appropriate solutions to medium-scale problems using Java"}, {"Code": "CLO2", "Description": "use tools (such as an IDE) for object-oriented design and development"}, {"Code": "CLO2", "Description": "apply the object-oriented design principles such as separation of concerns, responsibility analysis, and design by contract"}, {"Code": "CLO3", "Description": "write medium-scale object-oriented programs in Java"}, {"Code": "CLO3", "Description": "apply object-oriented analysis and design practice to complex software systems"}, {"Code": "CLO4", "Description": "apply systematic methods such as test driven development"}, {"Code": "CLO4", "Description": " create and refactor medium-scale object-oriented programs in Java using appropriate design principles"}, {"Code": "CLO5", "Description": "write effective documentation for a software system"}, {"Code": "CLO5", "Description": "describe and use the most important OO design patterns"}, {"Code": "CLO6", "Description": "work within a small team in the context of a software development project"}, {"Code": "CLO7", "Description": "design and implement an effective user interface in Java"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "OO Design", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "550"}, {"Assessment Type": "Project", "Assessment Name": "Team Software Project", "Weighting (%)": "2530"}, {"Assessment Type": "Lab", "Assessment Name": "work Labs", "Weighting (%)": "10"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP2011 Data Organisation 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP2911 Engineering Design in Computing 2021.01"}], "Handbook Information": {"Title": "COMP2511 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs2511/"}}, {"Course Code": "COMP2521", "Course Name": "Data Structures and Algorithms", "Course Name - SiMs": "Data Structures and Algorithms", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The goal of this course is to deepen students' understanding of data structures and algorithms and how these can be employed effectively in the design of software systems. We anticipate that it will generally be taken in the second year of a program, but since its only pre-requisite is COMP1511, is it possible to take it in first year. It is an important course in covering a range of core data structures and algorithms that will be used in context in later courses.\nTopics:\nAn introduction the structure, analysis and usage of a range of fundamental data types and the core algorithms that operate on them, including: algorithm analysis, sorting, searching, trees, graphs, files, algorithmic strategies, analysis and measurement of programs. Labs and programming assignments in C, using a range of Unix tools.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 2", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students ability to reflect on their own work. Tutorials will provide a forum for students to develop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.", "Course Aims": "COMP2521 aims to extend students programming ability and introduce them to a range of fundamental and useful data types, to develop their ability to analyse software, and to lay a solid foundation for further study of computing.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "design complete software solutions for simple problecribe and analyse fundamental data structures and algorithms"}, {"Code": "CLO2", "Description": "design software solutions for larger problems using abstraction and interfacebe able to analyse the performance characteristics of algorithms"}, {"Code": "CLO3", "Description": "distinguish between well-written programs and poorly writtenbe able to measure the performance behaviour of programs"}, {"Code": "CLO4", "Description": "write programs using good programming styadapt or develop an appropriate data structure for a given problem"}, {"Code": "CLO5", "Description": "understand and appropriately use abstractionadapt or develop appropriate algorithms to manipulate this data structure"}, {"Code": "CLO6", "Description": "have a solid understanding of values, storage and addressingbe able to reason about the effectiveness of data structures and algorithms for solving a given problem"}, {"Code": "CLO7", "Description": "create and use simple data structuresbe able to package a set of data structures and algorithms as an abstract data type"}, {"Code": "CLO8", "Description": "test and debug programsbe able to develop and maintain software systems in C that contain thousands of lines of code"}, {"Code": "CLO9", "Description": "work in a team to develop software"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "EXAM", "Weighting (%)": "640"}, {"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "12"}, {"Assessment Type": "Examination", "Assessment Name": "PRACTICAL EXAM", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "ASSIGN1", "Weighting (%)": "815"}, {"Assessment Type": "Assignment", "Assessment Name": "ASSIGN2", "Weighting (%)": "145"}, {"Assessment Type": "Lab", "Assessment Name": "work LAB", "Weighting (%)": "18"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP1927 Computing 2 2021.01"}], "Handbook Information": {"Title": "COMP2521 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs2521/"}}, {"Course Code": "COMP3121", "Course Name": "Algorithms and Programming Techniques", "Course Name - SiMs": "Algorithms & Programming Tech", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Correctness and efficiency of algorithms. Computational complexity: time and space bounds. Techniques for best-case, worst-case and average-case time and space analysis. Designing algorithms using induction, divide-and-conquer and greedy strategies. Algorithms: sorting and order statistics, trees, graphs, matrices. Intractability: classes P, NP, and NP-completeness, approximation algorithms.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to design new algorithms for solving new problems, using various design techniques (greedy, dynamic programming, divide and conquer, etc)"}, {"Code": "CLO2", "Description": "Be able to estimate efficiency of algorithms and justify their correctness"}, {"Code": "CLO3", "Description": "Be able to demonstrate improved problem solving skills"}], "Assessments": [{"Assessment Type": "Other", "Assessment Name": "Biweekly Homework", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Midterm Exam", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3821 Extended Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9801 Extended Design & Analysis of Algorithms 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9801 Extended Design & Analysis of Algorithms 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9101 Design and Analysis of Algorithms 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9101 Design and Analysis of Algorithms 2021.01"}], "Handbook Information": {"Title": "COMP3121 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3121/"}}, {"Course Code": "COMP3131", "Course Name": "Programming Languages and Compilers", "Course Name - SiMs": "Programming Languages & Compil", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Covers the fundamental principles in programming languages and implementation techniques for compilers (emphasis on compiler front ends). Course contents include: program syntax and semantics, formal translation of programming languages, finite-state recognisers and regular expressions, context-free parsing techniques such as LL(k( and LR(k), attribute grammars, syntax-directed translation, type checking and code generation. Lab: implementation of a compiler in a modern programming language for a small programming language.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9102 Programming Languages and Compilers 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9102 Programming Languages and Compilers 2021.01"}], "Handbook Information": {"Title": "COMP3131 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3131/"}}, {"Course Code": "COMP3141", "Course Name": "Software System Design and Implementation", "Course Name - SiMs": "Software Sys Des&Implementat'n", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course will present rigorous and formal methods for the design and implementation phases of software system development. Also considered are testing and reuse of designs. As far as possible, software tools that can assist the process will be used. The material will be presented using case studies, and students will be required to undertake a project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand the how to use logical program properties to characterise aspects of the functionuse Haskell and functional programming to write practical specification of programsoftware."}, {"Code": "CLO4", "Description": " Be able to use basic formal methods, strong type systems, and property-based testing to design and implement software while minimising software defectspecify programs in terms of logical properties and functional correctness"}, {"Code": "CLO2", "Description": " Understand the differedistinguish and balance andthe trade-offs between static methods (such as formal methods and type systems) and dynamic methods (such as testing) in assisting software design and implementation."}, {"Code": "CLO3", "Description": " Understand the role of typesuse types appropriately in program design, implementation, validation, and verification"}, {"Code": "CLO5", "Description": "Be able to use a variety of tools based on formal specifications of logical properties."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1s", "Weighting (%)": "120"}, {"Assessment Type": "AssignmentTest", "Assessment Name": "Assignment 2Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Weekly Exercises", "Weighting (%)": "320"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP3141 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3141/"}}, {"Course Code": "COMP3151", "Course Name": "Foundations of Concurrency", "Course Name - SiMs": "Foundations of Concurrency", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Concurrency = processes + communication. Communication via shared variables vs message passing. Models of concurrency: true concurrency vs interleaving. Abstractions: atomicity, locks and barriers, semaphores, monitors, threads, RPC, rendezvous. Classical problems: mutual exclusion, dining philosophers, sleeping barber, termination detection, gravitational N-body problem.Practical work: programming assignments and proving of program safety and liveness properties.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Design and implement multi-threaded, parallel, and distributed programs"}, {"Code": "CLO2", "Description": "Reason about safety and liveness properties of such programs"}, {"Code": "CLO3", "Description": "Describe the complexities involved in the previous two"}, {"Code": "CLO4", "Description": "Critically analyse and discuss (verbally or in writing) concurrent solutions"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "ASST1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST2", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "EXAM1", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "QUIZ", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "EXAM2", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9154 Foundations of Concurrency 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9154 Foundations of Concurrency 2021.01"}], "Handbook Information": {"Title": "COMP3151 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3151/"}}, {"Course Code": "COMP3153", "Course Name": "Algorithmic Verification", "Course Name - SiMs": "Algorithmic Verification", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "It is virtually impossible to guarantee the correctness of a system, and in turn the absence of bugs by standard software engineering practice such as code review, systematic testing and good software design alone. The formal methods community has developed various rigorous, mathematically sound techniques and tools that allow the automatic analysis of systems and software. The application of these fully automatic techniques is typically called algorithmic verification. The course will describe several automatic verification techniques, the algorithms they are based on, and the tools that support them. We will discuss examples to which the techniques have been applied, and provide experience with the use of several tools.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "understand foundations of automata theory and temporal logics"}, {"Code": "CLO2", "Description": "understand foundations of LTL and CTL model checking techniques and model checking tools"}, {"Code": "CLO3", "Description": "apply modern LTL and CTL model checking tool to verification tasks"}, {"Code": "CLO4", "Description": "learn about static analysis techniques for program verification"}, {"Code": "CLO5", "Description": "understand modern advanced verification techniques for timed systems"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Assignment given as homework (3 weeks)", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "Assignment given as homework (2 weeks)", "Weighting (%)": "10"}, {"Assessment Type": "Test", "Assessment Name": "Assignment given as homework (3 weeks)", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "Assignment given as homework (2 weeks)", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9153 Algorithmic Verification 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9153 Algorithmic Verification 2021.01"}], "Handbook Information": {"Title": "COMP3153 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3153/"}}, {"Course Code": "COMP3161", "Course Name": "Concepts of Programming Languages", "Course Name - SiMs": "Concepts of Programming Lang.", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Programming language paradigms: imperative, object oriented, declarative (i.e., functional and logic). Theoretical foundations of programming languages: syntax, operatational, axiomatic and denotational semantics. Implementation aspects of central language features, such as dynamic and strong typing, polymorphism, overloading and automatic memory management. Abstracting over programming languages and architectures: byte code approach, component software.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "distinguish superficial (i.e., syntactic) from fundamental (i.e., semantic) differences of programming languages."}, {"Code": "CLO2", "Description": "read, write and reason about programs in various programming language paradigms, including imperative, object-oriented, functional, concurrent & parallel programming."}, {"Code": "CLO3", "Description": "use the basic scientific tools of language design and analysis, including formal languages and formal descriptions of static and dynamic semantics."}, {"Code": "CLO4", "Description": "use modern language features, such as dynamic and strong typing, polymorphism, overloading, automatic memory management, and multicore parallelism."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Dynamic Semantics Assessment: EvaluatorProofs, Languages", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "StatDynamic Semantics Assessment: Type Inference", "Weighting (%)": "17.5"}, {"Assessment Type": "Assignment", "Assessment Name": "Type Theory, Type Inference", "Weighting (%)": "17.5"}, {"Assessment Type": "Examination", "Assessment Name": "Midsession and Final Exams", "Weighting (%)": "650"}, {"Assessment Type": "Attendance", "Assessment Name": "Tutorial Participation", "Weighting (%)": "8"}], "Relationships": [{"Relationship Type": "Jointly Taught", "Related Course": "COMP9164 Concepts of Programming Languages 2021.01"}], "Handbook Information": {"Title": "COMP9161 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3161/"}}, {"Course Code": "COMP3211", "Course Name": "Computer Architecture", "Course Name - SiMs": "Computer Architecture", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Study the architecture & organisation of modern processors, and influences upon these, with emphasis on pipelined RISC machines; gain understanding of the design of the memory subsystem, I/O, and system level interconnect; become proficient in the use of tools such as VHDL and SimpleScalar for the description, simulation, and verification of architectural designs; complete a series of assignments leading to the design, implementation, validatation and assessment of a RISC system. It is assumed students are familiar with combinational and sequential logic design principles and have some experience in the use of CAD tools to describe and simulate digital systems.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Know how computing systems are structured with a focus on the processor, cache, memory and system busesDemonstrate an understanding of computer hardware design, specifically how a pipelined RISC processor is created, how a hierarchical memory system is designed, and how a multi-core processor system is structured  "}, {"Code": "CLO2", "Description": "Understand why computers are structured the way they are and the importance of improvement performance and reducing cost as a driver for engineering enhancementDemonstrate an ability to work in teams"}, {"Code": "CLO4", "Description": " Have developed skills in obtaining and describing simulation resultsDesign a processor core to meet specified requirements such as performance and cost"}, {"Code": "CLO3", "Description": "Have developed skills in designing architectural solutions and describing designs using VHDL"}, {"Code": "CLO5", "Description": " Have practiced professional skills including project management, results analysis, critical discussion, structuring of information, oral and written presentation, and report writing.Investigate and validate a hardware design using simulation tools"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Week 6Midterm Quiz", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Two Hour Exam", "Weighting (%)": "450"}, {"Assessment Type": "Other", "Assessment Name": "Project Work & Progressive Assessment", "Weighting (%)": "3540"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9211 Computer Architecture 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9211 Computer Architecture 2021.01"}], "Handbook Information": {"Title": "COMP3211 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3211/"}}, {"Course Code": "COMP3222", "Course Name": "Digital Circuits and Systems", "Course Name - SiMs": "Digital Circuits and Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course aims to provide students with a knowledge of problem solving with digital systems (computer systems and digital circuits). The basic building blocks of combinational and sequential circuits are introduced to develop circuit solutions to problems and to understand and implement the design and operation of hardware models of digital and computer systems. HDLs will be used to describe circuits and state of the art computer aided design tools will be used to design complex systems.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Design and implement combinational and synchronous sequential logic circuits"}, {"Code": "CLO2", "Description": "Analyse various types ofcombinational and sequential digital logic circuits"}, {"Code": "CLO5", "Description": " Describe simple hardware functions using a hardware description language"}, {"Code": "CLO3", "Description": "Understand engineering concepts in the design of digital circuits"}, {"Code": "CLO6", "Description": " Make use of CAD tools to sSpecify, simulate and synthesize circuit designs using CAD tools"}, {"Code": "CLO4", "Description": "explain the role of hardware description languages in digital circuit implementation"}, {"Code": "CLO7", "Description": " Understand the purpose of and steps involved inImplement digital circuit implementations using Field-Programmable Gate Arrays"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Labs", "Weighting (%)": "3540"}, {"Assessment Type": "Examination", "Assessment Name": "Final Theory Exam", "Weighting (%)": "215"}, {"Assessment Type": "Examination", "Assessment Name": "Final Practical Exam", "Weighting (%)": "25"}, {"Assessment Type": "Test", "Assessment Name": "Mid-Session QuizFortnightly quizzes", "Weighting (%)": "1520"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP2021 Digital System Structures 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9022 Digital Systems Structures 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9222 Digital Circuits and Systems 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "ELEC2141 Digital Circuit Design 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9222 Digital Circuits and Systems 2021.01"}], "Handbook Information": {"Title": "COMP3222 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3222/"}}, {"Course Code": "COMP3231", "Course Name": "Operating Systems", "Course Name - SiMs": "Operating Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Operating System Organisation and services. Process management: scheduling, synchronisation and multiprocessors. Memory management: virtual memory, and paging. Storage management: file systems and I/O. Case studies include: UNIX & Windows. Programming assignments. Assumed Knowledge: C", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Explain the key concepts and mechanisms of modern operating systems"}, {"Code": "CLO2", "Description": "Explain and diagnose the behaviour of an operating system"}, {"Code": "CLO3", "Description": "Implement or extend the functionality of an operating system"}, {"Code": "CLO3", "Description": "Explain and diagnose the behaviour of an operating system"}, {"Code": "CLO4", "Description": "Implement or extend the functionality of an operating system."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "ASST0", "Weighting (%)": "104"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST1", "Weighting (%)": "3012"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST2", "Weighting (%)": "3012"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST3", "Weighting (%)": "3012"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9201 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9201 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}], "Handbook Information": {"Title": "COMP3231 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3231/"}}, {"Course Code": "COMP3311", "Course Name": "Database Systems", "Course Name - SiMs": "Database Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Data models: entity-relationship, relational, object-oriented. Relational database management systems: data definition, query languages, development tools. Database application design and implementation. Architecture of relational database management systems: storage management, query processing, transaction processing. Lab: design and implementation of a database application.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "This course aims to explore in depth the practice of developing database applications and the theory behind relational database management systems (RDBMSs). It will also give an overview of the technologies used in implementing database management systems and the past, present and future of database systems and database research.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Designdevelop accurate, non-redundant data models, and express them as SQL schemas"}, {"Code": "CLO2", "Description": "realise data models as relational database schemas"}, {"Code": "CLO2", "Description": " Formulate queries via the full range of SQL constructs"}, {"Code": "CLO3", "Description": " Utilise stored procedures and triggers to extend DBMS capabilities"}, {"Code": "CLO4", "Description": " BuildWrite applications in a procedural language (e.g., Python) that interact effectively with databases"}, {"Code": "CLO5", "Description": " Analyze performance issues in relational database applications"}, {"Code": "CLO6", "Description": " Explain how query and transaction processing techniques work in RDescribe the overall architecture of relational DBMSs"}, {"Code": "CLO8", "Description": "Explain how transactions and concurrency control work"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Data Modelling", "Weighting (%)": "8"}, {"Assessment Type": "Assignment", "Assessment Name": "SQL Queries and PLpgSQL functions", "Weighting (%)": "120"}, {"Assessment Type": "Assignment", "Assessment Name": "Procedural Interfaces to DBMSsython and SQL", "Weighting (%)": "120"}, {"Assessment Type": "Other", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9311 Database Systems 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "INFS5992 Data Management 2021.01"}], "Handbook Information": {"Title": "COMP3311 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3311/"}}, {"Course Code": "COMP3331", "Course Name": "Computer Networks and Applications", "Course Name - SiMs": "Computer Networks&Applications", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Networking technology overview. Protocol design and validation using the finite state automata in conjunction with time-lines. Overview of the IEEE802 network data link protocol standards. Addressing at the data link and network layers. Network layer services. Introduction to routing algorithms such as Distance Vector and Link State. Congestion control mechanisms. Internetworking issues in connecting networks. The Internet Protocol Suite overview. The Internet protocols IPv4 and IPv6. Address resolution using ARP and RARP. Transport layer: issues, transport protocols TCP and UDP. Application level protocols such as: File Transfer Protocol (FTP), Domain Name System (DNS) and Simple Mail Transfer Protocol (SMTP). Introduction to fundamental network security concepts, 802.11 wireless networks and peer to peer networks. There is a substantial network programming component in the assessable material.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a working knowledge of computer networks, and will be able to demonstrate their knowledge both by describing aspects of the topics and by solving problems related to the topics"}, {"Code": "CLO2", "Description": "Have a solid understanding of the current architecture of the Internet and the entities involved in its operations"}, {"Code": "CLO3", "Description": "Be able to identify soundness or potential flaws in proposed protocols"}, {"Code": "CLO4", "Description": "Be equipped with the necessary skills to design networked applications and protocols"}, {"Code": "CLO5", "Description": "Implement and write protocols and applications in C, Java or Python"}, {"Code": "CLO6", "Description": "Analyse and evaluate the performance of computer networks"}, {"Code": "CLO7", "Description": "Be able to capture and analyse network traffic"}, {"Code": "CLO8", "Description": "Be able to understand and explain security and ethical issues in computer networking"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Lab", "Weighting (%)": "20"}, {"Assessment Type": "Test", "Assessment Name": "Mid term test", "Weighting (%)": "20"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9331 Computer Networks and Applications 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3931 Extended Computer Networks and Applications 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9331 Computer Networks and Applications 2021.01"}], "Handbook Information": {"Title": "COMP3331 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3331/"}}, {"Course Code": "COMP3411", "Course Name": "Artificial Intelligence", "Course Name - SiMs": "Artificial Intelligence", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Machine intelligence. Principles: knowledge representation, automated reasoning, machine learning. Tools: AI programming languages, control methods, search strategies, pattern matching. Applications: computer vision, speech recognition, natural language processing, expert systems, game playing, computer-aided learning. Philosophical and psychological issues. Lab: logic programming assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-IN Blended in-person / online Intensive", "Learning Outcomes": [{"Code": "CLO1", "Description": "Gain in-depth understanding of a variety ofExplain fundamental AI methods and techniques."}, {"Code": "CLO2", "Description": "Understand the foundational issues of AI drawing on philosophical enquiryExplain features or aspects of AI algorithms."}, {"Code": "CLO3", "Description": "Be able to choose appropriate AI techniques to solve givenDescribe how AI techniques are applied to particular problems."}, {"Code": "CLO4", "Description": "Be able to implement programs based on standard AI algorithmsEmploy AI programming and practices."}, {"Code": "CLO5", "Description": "Acquire experience in utlizing AI Python tookits in realistic contextsImplement or develop a functional AI system"}, {"Code": "CLO6", "Description": "Be aware of a variety of application areas of current AI technology"}, {"Code": "CLO7", "Description": "Appreciate the dangers of unthinkingly applying AI in business and industry"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "152"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "125"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 3", "Weighting (%)": "16"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9414 Artificial Intelligence 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9814 Extended Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9414 Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9814 Extended Artificial Intelligence 2021.01"}], "Handbook Information": {"Title": "COMP3411 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3411/"}}, {"Course Code": "COMP3421", "Course Name": "Computer Graphics", "Course Name - SiMs": "Computer Graphics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Graphics hardware: scan conversion of lines and polygons. 2D transformations: windowing, clipping, viewports. User interfaces. 3D transformations: perspective transformation, 3D clipping, hidden surface removal, lighting and texture maps. Hierarchical modelling of objects, modelling curves and surfaces with splines and fractals. Graphics standards. Lab: programming assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020115 Computer Graphics", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand modeling in computer graphics, including the mathematical representation and computer implementations of lines, curves, surfaces and transformations"}, {"Code": "CLO2", "Description": "Understand the rendering process, including the mathematics of projection, hidden surface removal, local and global illumination techniques and the computer implementation of this in the graphics pipeline."}, {"Code": "CLO3", "Description": "Be able to write interactive OpenGL programs to manipulated and render complex scenes"}, {"Code": "CLO4", "Description": "To be able to make design choices regarding graphics techniques"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "ASST1", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST2", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "QUIZZES", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "EXAM", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9415 Computer Graphics 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9415 Computer Graphics 2021.01"}], "Handbook Information": {"Title": "COMP3421 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3421/"}}, {"Course Code": "COMP3431", "Course Name": "Robotic Software Architecture", "Course Name - SiMs": "Robotic Software Architecture", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "An introduction to Intelligent agent design. Picking actions using planning, learning or engineered control. Both practical and theoretical components. Practical component: Re-implement parts of a real agent architecture on a robot. Assignment based. Emphasis on engineering a working system. Theoretical component: Introduction to a variety of research agent architectures including classical planning and reinforcement learning. Lecture and lab based.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Experience with the details of one robot architecture"}, {"Code": "CLO2", "Description": "An overview of a range of other architectures and decision making systems"}, {"Code": "CLO3", "Description": "An understanding of the practicalities of programming physical robots as opposed to purely software systems"}, {"Code": "CLO4", "Description": "An understanding of a robot as a complete system, as well as its component parts"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "40"}, {"Assessment Type": "Other", "Assessment Name": "Final Report", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9434 Robotic Software Architecture 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9434 Robotic Software Architecture 2021.01"}], "Handbook Information": {"Title": "COMP3431 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3431/"}}, {"Course Code": "COMP3441", "Course Name": "Security Engineering", "Course Name - SiMs": "Security Engineering", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Introduction to computer security, cybercrime, and cyberterror. The principles of engineering secure systems.Engineering secure systems. How security fails. Security analysis and design. Private and public cryptographic protocols. Physical security, social engineering, sniffing, intrusion detection, prevention and response, firewalls, honeypots. Digital forensics. Case studies drawn from the history of hacking and from current events.Additional topics drawn from recent developments and current research in applied computer security.No computing pre-requisites assumed, student need a keen devious and analytical mind.Students with a strong interest in security should also consider taking the complementary security courses COMP4442, COMP9447, TELE3119.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029901 Security Science", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9441 Security Engineering 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP6441 Security Engineering and Cyber Security 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP6841 Extended Security Engineering and Cyber Security 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9441 Security Engineering 2021.01"}], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP3511", "Course Name": "Human Computer Interaction", "Course Name - SiMs": "Human Computer Interaction", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Provides an introduction to user-system interactions, both analysis and design. The approach is cognitive, focusing on matching user goals with computer technologies. Topics: the human information processing system, models of interaction, strategies for and process of design and evaluation. Project work is emphasised.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-IN", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Intensive BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to prepare a project plan that is based on user centred design principles and then carry out design activities to design, evaluate and refine user interaction based on iteration"}, {"Code": "CLO2", "Description": "To develop the skills to create a user interface evaluation report (written and oral) that critiques a user interface"}, {"Code": "CLO3", "Description": "Understand the strengths and limitations of human cognition and memory and apply these to the design of more usable interfaces that do not cognitively overload users."}, {"Code": "CLO4", "Description": "To develop design skills, primarily using paper for rapid solutions, and consolidate individual designs in small groups to understand the importance of design decisions and the selection process."}, {"Code": "CLO5", "Description": "Prepare and carry out usability walkthroughs to evaluate both paper and electronic based designs for their usability, and then create structured reports that quantify the issues discovered from evaluation"}, {"Code": "CLO6", "Description": "To ensure that your design work includes user needs analysis and is not just a reflection of what you believe your users need"}, {"Code": "CLO7", "Description": "Construct questionnaires/surveys to obtain pre- and post-test information from users, and understand the importance of ethics and privacy in order be able to carry out appropriate user-centred design activities."}, {"Code": "CLO8", "Description": "Understand the relationship between the scientific method and the user centred design approach and be aware of the scientific and research approaches used in user interface design research."}, {"Code": "CLO9", "Description": "Understand how user centred design processes should be inclusive of all users, including international audiences, those with special needs, such as disabilities, as well different levels of user experience, and use this knowledge to design interfaces appropriate to a particular group of users."}, {"Code": "CLO1", "Description": " To develop an awareness of user centred design tools, methods, and techniques and maintain a real-world perspective in order to be able to apply this knowledge in industry."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1 ? Individual Website Design Critique", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2 ? Group User Interface Design", "Weighting (%)": "25"}, {"Assessment Type": "Other", "Assessment Name": "Design Diary/Lab Exercises", "Weighting (%)": "5"}, {"Assessment Type": "Other", "Assessment Name": "Participation and Attendance", "Weighting (%)": "5"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9511 Human Computer Interaction 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9511 Human Computer Interaction 2021.01"}], "Handbook Information": {"Title": "COMP3511 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3511/"}}, {"Course Code": "COMP3601", "Course Name": "Design Project A", "Course Name - SiMs": "Design Project A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Embedded system design team projects. Embedded system design life cycle. Software/hardware codesign. Hardware slection process. Software development techniques. Hardware/software integration and system testing. Ethics in teams, ethics in design, IP protection, IP reuse, project report writing. Project and team management.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "co-operate and delegate within a group"}, {"Code": "CLO2", "Description": "design simple digital hardware systems"}, {"Code": "CLO3", "Description": "interface external boards to the PC"}, {"Code": "CLO4", "Description": "research, design and purchase components"}, {"Code": "CLO5", "Description": "build and prototype external hardware"}, {"Code": "CLO6", "Description": "write design documentation"}, {"Code": "CLO7", "Description": "work within a budget"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Project Design", "Weighting (%)": "50"}, {"Assessment Type": "Report", "Assessment Name": "Design DocumentationReport", "Weighting (%)": "230"}, {"Assessment Type": "Report", "Assessment Name": "Team Report", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "PeerTeam Assessment", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "Meeting Performance Target", "Weighting (%)": "10"}], "Relationships": [], "Handbook Information": {"Title": "COMP3601 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3601/"}}, {"Course Code": "COMP3821", "Course Name": "Extended Algorithms and Programming Techniques", "Course Name - SiMs": "Ext Algorithms&Prog Techniques", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "As for COMP3121 but in greater depth.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Apply standard design techniques to solve new algorithmic problems"}, {"Code": "CLO2", "Description": "Evaluate the efficiency of algorithms and justify their correctness"}, {"Code": "CLO3", "Description": "Communicate algorithmic ideas at different abstraction levels"}, {"Code": "CLO4", "Description": "Integrate modeling skills and algorithmic knowledge for problem solving"}, {"Code": "CLO5", "Description": "Formulate real-life scenarios as algorithmic problems"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Homework 1", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Homework 2", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Midterm Exam", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9801 Extended Design & Analysis of Algorithms 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3121 Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9801 Extended Design & Analysis of Algorithms 2021.01"}], "Handbook Information": {"Title": "COMP3821 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3821/"}}, {"Course Code": "COMP3891", "Course Name": "Extended Operating Systems", "Course Name - SiMs": "Ext Operating Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "As for COMP3231 Operating Systems but in greater depth and breadth.Assumed Knowledge: C", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9201 Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3231 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9201 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3231 Operating Systems 2021.01"}], "Handbook Information": {"Title": "COMP3891 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3891/"}}, {"Course Code": "COMP3900", "Course Name": "Computer Science Project", "Course Name - SiMs": "Computer Science Project", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "A capstone software project. Students work in teams to define, implement and evaluate a real-world software system. Most of the work in this course is team-based project work, although there are some introductory lectures on software project management and teamwork strategies. Project teams meet fortnightlyweekly with project mentors to report on the progress of the project. Assessment is based on a project proposal, progressive demonstrations and retrospectives, a final project demonstration and report, and on the quality of the software system itself. Students are also required to reflect on their work and to provide peer assessment of their team-mates' contributions to the project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "Level 3", "Teaching Strategies and Rationale": "Since the course is primarily project based, there will only be a few lectures at the start of the course to explain the projects, to review software project management, to discuss teamwork issues, and to discuss professionalism in the IT workplace.\nThe remainder of the course will be groups working on their projects, with fortnightlyweekly meetings with a group mentor.\nSome of the remaining lecture slots will be used for students to present their work.", "Course Aims": "This course aims to produce students who can apply their computing knowledge and skills to work effectively as IT professionals.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to work from a set of requirements, elaborate them, and produce a specification"}, {"Code": "CLO2", "Description": " be able to design and build a correct, efficient and robust software system from specification"}, {"Code": "CLO3", "Description": "be able to use software development and software project management tools"}, {"Code": "CLO4", "Description": "be able to validate the correctness and robustness of software"}, {"Code": "CLO5", "Description": "be able to work effectively in a project team, and lead when required"}, {"Code": "CLO6", "Description": "be able to manage their time effectively, and make reasoned trade-offs over competing demands"}, {"Code": "CLO7", "Description": "be able to communicate technical information clearly, both verbally and in writing"}], "Assessments": [{"Assessment Type": "Report", "Assessment Name": "PROJECT PROPOSAL", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "Software Quality", "Weighting (%)": "40"}, {"Assessment Type": "Other", "Assessment Name": "PARTICIPATION", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "Progress Checkpoints", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9992 Research Project B 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9900 Information Technology Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9945 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9993 Research Project C 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9596 Research Project 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9900 Information Technology Project 2021.01"}], "Handbook Information": {"Title": "COMP3900 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3900/"}}, {"Course Code": "COMP3901", "Course Name": "Special Project A", "Course Name - SiMs": "Special Project A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The student will complete a small research project under the supervision of a member of the academic staff of the School. The project will be assessed on the basis of a report written by the student.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to work supervised on a research project."}, {"Code": "CLO2", "Description": "Be able to communicate the results of research projects both written and verbally."}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "Seminar Presentation", "Weighting (%)": "10"}, {"Assessment Type": "Report", "Assessment Name": "Project Report", "Weighting (%)": "90"}], "Relationships": [], "Handbook Information": {"Title": "COMP3901 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3901/"}}, {"Course Code": "COMP3902", "Course Name": "Special Project B", "Course Name - SiMs": "Special Project B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "12", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The student will complete a medium-sized research project under the supervision of a member of the academic staff of the School. The project will be assessed on the basis of report written by the student.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 3", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE", "Delivery Mode": "Fully online", "Delivery Format": "BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to work supervised on a research project."}, {"Code": "CLO2", "Description": "Be able to communicate the results of research projects both written and verbally."}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "Seminar Presentation", "Weighting (%)": "10"}, {"Assessment Type": "Report", "Assessment Name": "Project Report", "Weighting (%)": "90"}], "Relationships": [], "Handbook Information": {"Title": "COMP3902 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3902/"}}, {"Course Code": "COMP4121", "Course Name": "Advanced Algorithms", "Course Name - SiMs": "Advanced Algorithms", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course is a continuation of our introductory algorithms courses COMP3121/3821/9101/9801. We will cover some randomized algorithms and data structures, such as randomized hashing, skiplists, order statistics and Karger's randomized Min Cut algorithm. We will then look at the Markov chains and the Google PageRank algorithm, Hidden Markov Models and the Viterbi Algorithm, and then cover in quite a detail a variety of other algorithms important to the present day practice, including some of the most important algorithms used in Data Science.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP4121 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4121/"}}, {"Course Code": "COMP4128", "Course Name": "Programming Challenges", "Course Name - SiMs": "Programming Challenges", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The focus of the course is the development and implementation of advanced algorithms. Students will learn to select appropriate algorithms for a given problem, integrate multiple algorithms for solving a complex problem, design new algorithms, and implement them.  Algorithms covered include dynamic programming, shortest path, max flow, suffix trees, and combinatorial algorithms. They will also learn skills required for programming contests, which include evaluation of problem difficulty, solving problems in teams, and work under time pressure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "It is common for computing professionals to be faced with challenging problems that require both algorithmic thinking and skillful programming to solve.  The aim of this course is to train students in the implementation of solutions of such problems.   The aim of this course is building practical solutions rather than theory.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "design and implement solutions to unfamiliar problems."}, {"Code": "CLO2", "Description": "understand of the practical aspects of the material covered in the course\u00e2??for instance, how to apply dynamic programming concepts in an actual program and how to improve their efficiency, as opposed to how to theoretically derive their correctness."}, {"Code": "CLO3", "Description": "be able to work on all phases of solving a problem (identifying, combining, and implementingapproaches) under tight time constraints. "}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Practical Tests", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "Final Examination", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP4128 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4128/"}}, {"Course Code": "COMP4141", "Course Name": "Theory of Computation", "Course Name - SiMs": "Theory of Computation", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Computability: formal languages and problems, Turing Machines (TMs), computability, (semi-)decidability, universal TMs, Church-Turing thesis, halting problem, reduction and undecidability proofs, examples; Complexity: run time, space, complexity classes, non-determinism and NP, polynomial reductions and NP completeness, optimisation problems and approximation, randomisation; Languages and Automata: regular expressions and languages, finite automata, determinisation, context-free grammars and languages (CFLs), Chomsky normal form, word problems, pumping lemma, push-down automata, decidability problems for CFLs; Semantics and Correctness: while programs, assertions and program correctness, Hoare logic, loops and loop invariants, relative completeness of Hoare logic (and its role in a proof of G\u00f6del's incompleteness result)", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020105 Computational Theory", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand what problems can (and cannot) be solved by computation of various types (regular and context-free languages, pumping lemmas, recursion theory, undecidability, approximation problems)"}, {"Code": "CLO2", "Description": "Understand the notion of computational complexity and complexity classes (Logspace, P,NP, IP, PSPACE, Polynomial Hierarchy, Probabilistic Classes"}, {"Code": "CLO3", "Description": "Understand how we can express computation (finite state automata, push-down automata, Turing Machines, Probabilistic Turing Machines)"}], "Assessments": [{"Assessment Type": "Other", "Assessment Name": "Weekly problem sets", "Weighting (%)": "30"}, {"Assessment Type": "Examination", "Assessment Name": "Midterm Exam", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP4141 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4141/"}}, {"Course Code": "COMP4161", "Course Name": "Advanced Topics in Software Verification", "Course Name - SiMs": "Advanced Verification", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course is about mechanical proof assistants, how they work, and what they can be used for. It presents specification and proof techniques used in industrial grade theorem provers, teaches the theoretical background to the techniques involved, and shows how to use a theorem prover to conduct formal proofs in practice. The courses is intended to bring third/fourth year and postgraduate students into contact with the current research topics in the field of theorem proving and automated deduction and to teach them the necessary skills to successfully use industrial grade verification environments in modelling and verification.\nTopics covered included: higher order logic, natural deduction, lambda calculus, term rewriting, data types and recursive functions, induction principles, calculational reasoning, mathematical proofs, decision procedures for a variety of logical domains, and proofs about programs.\nNote: experience with (first-order) logic and functional programming is required.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020105 Computational Theory", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP4161 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4161/"}}, {"Course Code": "COMP4336", "Course Name": "Mobile Data Networking", "Course Name - SiMs": "Mobile Data Networking", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "This course will examine how mobility affects networks, systems, and applications. It will teach advanced concepts and protocols for managing mobility in TCP/IP networks, improving spectrum and energy efficiency of mobile networking, realizing more direct form of device-to-device communication, enhancing the quality of experience of mobile video, and achieving self-powered wireless communication. Learning emerging device functionalities and features will be part of this course, which requires some basic understanding of mobile device programming, such as Android and Java.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "To master the fundamental theories and concepts of wireless networking"}, {"Code": "CLO2", "Description": "To analyse the key algorithms, protocols, and methods used by mobile networks"}, {"Code": "CLO3", "Description": "To gain insight to the frontier technologies for mobile networking"}, {"Code": "CLO4", "Description": "To experiment with the advanced capabilities of sensor-rich mobile devices"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Mid-term Test", "Weighting (%)": "20"}, {"Assessment Type": "Lab", "Assessment Name": "work laboratory experiment demonstrations", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Mobile Network Measurement", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9336 Mobile Data Networking 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9336 Mobile Data Networking 2021.01"}], "Handbook Information": {"Title": "COMP4336 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4336/"}}, {"Course Code": "COMP4337", "Course Name": "Securing Fixed and Wireless Networks", "Course Name - SiMs": "Securing Fixed & Wireless Netw", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "With exponential growth of the Internet, security of a network has become increasingly challenging. This subject will explore the security vulnerabilities in both fixed and wireless networks and cover the fundamental concepts and advanced issues with an emphasis on the Internet architecture and protocols.\n\nThe following key concepts will be covered: Wireless Communications and Security overview, Review of Cryptographic techniques, 802.11 Technologies and legacy 802.11 Security: lessons learnt, Encryption Ciphers and Methods in Wireless Networks, Wireless Security Risks, Wireless Security Auditing and Pen Test Introduction,  IPSec and IP layer security,  PKI/X.509, Transport Layer Security/DTLS,   Intrusion Detection and Protection Systems, Network Firewalls, Secure Neighbor Discovery, Routing and Forwarding Security,  Authentication and Key Management in Wireless Networks/Sensor Networks,   Broadcast Security and Secure Code Dissemination,  Network Privacy and Anonymity, Security and Privacy in Location Services, Smart Grid and IoT security.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029901 Security Science", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9337 Securing Fixed and Wireless Networks 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9337 Securing Fixed and Wireless Networks 2021.01"}], "Handbook Information": {"Title": "COMP4337 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4337/"}}, {"Course Code": "COMP4418", "Course Name": "Knowledge Representation and Reasoning", "Course Name - SiMs": "Knowledge Representation", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Knowledge Representation and Reasoning (KRR) is at the core of Artificial Intelligence. It is concerned with the representation of knowledge in symbolic form and the use of this knowledge for reasoning. This course presents current trends and research issues in Knowledge Representation and Reasoning (KRR). It enables students interested in Artificial Intelligence to deepen their knowledge in this important area and gives them a solid background for doing their own work/research in this area. The topics covered in more detail are AI Logics, Probablilistic Reasoning, Constraints, and Game Theory.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand theoretical and practical issues in symbolic knowledge representation and reasoning, in general"}, {"Code": "CLO2", "Description": "Understand the capabilities of specific knowledge representation formalisms for specific tasks"}, {"Code": "CLO3", "Description": "Make effective use of techniques specific to specific knowledge representation problems and formalisms"}, {"Code": "CLO4", "Description": "Make effective use of special-purpose languages for (some of) commonsense reasoning, ontologies, planning, reasoning about actions, constraint programming"}], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP4418 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4418/"}}, {"Course Code": "COMP4511", "Course Name": "User Interface Design and Construction", "Course Name - SiMs": "User Interface Design & Constr", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course is a project-based course designed to build on the basic skills acquired in COMP3511 \u2013 Human Computer Interaction. The course addresses the skills and knowledge required in industry to brainstorm, design, implement, and evaluate an application through the user-centred design process. Because this is an iterative process, students will be required to build their interface at least three times, starting with a low-fidelity prototype and building to high-fidelity and more complete prototypes. By the end of the course, students should have a solid understanding of the importance of user-centred design and how it is applied in the industry to design, test and build a functioning application.\nThe course is built to reflect up-to-date industry practice and methods. You would have benefitted from also completing COMP2911, which introduces you to object-oriented techniques, UML and design patterns. Whilst you will be coding in this course to build an iteration of your application, this is not the focus of the course, which remains on design practices and testing of graphical user interfaces. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP4581 Extended User Interface Design and Construction 2021.01"}], "Handbook Information": {"Title": "COMP4511 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4511/"}}, {"Course Code": "COMP4601", "Course Name": "Design Project B", "Course Name - SiMs": "Design Project B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Hardware design and systems prototyping using field-programmable gate arrays. Emphasises laboratory experience in programming and interfacing with FPGAs. Acceleration of soft-core processors, design of custom accelerator blocks and configurable logic-based applications from areas such as telecommunications, signal processing, cryptography and biological sequencing. Techniques for designing and implementing configurable systems. CAD challenges posed by the area. Design validation, performance analysis and power consumption. Reconfigurable systems.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "design and implement digital systems that incorporates programable logic"}, {"Code": "CLO2", "Description": "Explain and put into practice techniques for accelerating computation in hardware"}, {"Code": "CLO3", "Description": "Apply appropriate advanced techniques in digital design and implementation"}, {"Code": "CLO3", "Description": "Explain and put into practice techniques for accelerating computation in hardware"}, {"Code": "CLO4", "Description": "Document and present their developments in a professional manner"}, {"Code": "CLO4", "Description": "Apply appropriate advanced techniques in digital design and implementation"}, {"Code": "CLO5", "Description": "Document and present their developments in a professional manner"}], "Assessments": [{"Assessment Type": "Other", "Assessment Name": "Seminar", "Weighting (%)": "35"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "50"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab logbook", "Weighting (%)": "15"}], "Relationships": [], "Handbook Information": {"Title": "COMP4601 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4601/"}}, {"Course Code": "COMP4904", "Course Name": "Industrial Training 1", "Course Name - SiMs": "Industrial Training 1", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "18", "Grading Basis": "Satisfactory/Unsatisfactory", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Please Note: Co-op students are not liable for tuition fee charges for this course.\nThis is the first Industrial Training placement for Computer Science Co-op scholars. Students undertake a six month placement with a sponsor company. Students must provide a report on their experience at the end of the placement.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "Work Integrated Learning", "Repeat for Credit": "Wholly work experience in industry \u2013 not directed or supported by UNSW (CSP and tuition fee exempt)", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP4903 Industrial Training 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "BINF4903 Industrial Training 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "SENG4903 Industrial Training 2021.01"}], "Handbook Information": {"Title": "COMP4904 Course Outline", "URL": "http://www.cse.unsw.edu.au/undergrad/programs/cscoop.html"}}, {"Course Code": "COMP4905", "Course Name": "Industrial Training 2", "Course Name - SiMs": "Industrial Training 2", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "15", "Grading Basis": "Satisfactory/Unsatisfactory", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Please Note: Co-op students are not liable for tuition fee charges for this course.\nThis is the second Industrial Training placement for Computer Science Co-op scholars. Students undertake a six month placement with a sponsor company. Students must provide a report on their experience at the end of the placement.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "Work Integrated Learning", "Repeat for Credit": "Wholly work experience in industry \u2013 not directed or supported by UNSW (CSP and tuition fee exempt)", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP4905 Course Outline", "URL": "http://www.cse.unsw.edu.au/undergrad/programs/cscoop.html"}}, {"Course Code": "COMP4906", "Course Name": "Industrial Training 3", "Course Name - SiMs": "Industrial Training 3", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "15", "Grading Basis": "Satisfactory/Unsatisfactory", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "Please Note: Co-op students are not liable for tuition fee charges for this course.\nThis is the third Industrial Training placement for Computer Science Co-op scholars. Students undertake a six month placement with a sponsor company. Students must provide a report on their experience at the end of the placement.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "Work Integrated Learning", "Repeat for Credit": "Wholly work experience in industry \u2013 not directed or supported by UNSW (CSP and tuition fee exempt)", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP4906 Course Outline", "URL": "http://www.cse.unsw.edu.au/undergrad/programs/cscoop.html"}}, {"Course Code": "COMP4920", "Course Name": "Professional Issues and Ethics in Information Technology", "Course Name - SiMs": "Professional Issues and Ethics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "What if companies claimed ownership of your personal details or photos and charged you to prevent them being made public? Or if devices were controlled by buggy software or software with potentially malicious backdoors? The pervasive nature of computing in today\u2019s society puts a great deal of responsibility on IT professionals to maintain high ethical and quality standards and uphold the trust of the public. Professional bodies now consider all these essential competencies for computing professionals.\n\nIn this capstone course, students will gain an appreciation of the responsibilities of a computing professional and apply ethical theories and reasoning to IT industry issues such as software quality, privacy and security, intellectual property and legal obligations of IT practitioners.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course has a mixture of guest lectures on topics of interest, and seminars focusing on particular professional issues and case studies.\nLectures provide an overview of one particular aspect of software project management or a professional or ethical issue. Guest lecturers are able to provide expertise in a variety of areas and the lectures provide an essential foundation to apply in seminars and essays.\nSeminars provide students an opportunity for more in-depth discussion on particular topics and, in student-led seminars, enable students to develop skills in expression, critical analysis and presentation.\nEssays enable students to study in-depth a topic of interest and promotes the development of critical thinking and analytical abilities and written communication skills.", "Course Aims": "To give students an overview of ethical and professional issues as practiced in industry.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Compare, critically evaluate and apply ethical frameworks to make professional judgements"}, {"Code": "CLO2", "Description": "Demonstrate understanding of several topical professional issues at the level of a starting professional engineer or computer scientist, such as software quality, intellectual property, data privacy, legal frameworks"}, {"Code": "CLO3", "Description": "Demonstrate the communication skills needed to present reasoned arguments"}], "Assessments": [{"Assessment Type": "Tutorial", "Assessment Name": "work Seminar participation", "Weighting (%)": "20"}, {"Assessment Type": "Presentation", "Assessment Name": "Seminars", "Weighting (%)": "30"}, {"Assessment Type": "Report", "Assessment Name": "Lecture summaries", "Weighting (%)": "10"}, {"Assessment Type": "Essay", "Assessment Name": "Ethics case study", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP2920 Professional Issues and Ethics for Computer Science 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "SENG4921 Professional Issues and Ethics 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "SENG4920 Ethics and Management 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "BINF4920 Professional Issues and Ethics for Bioinformatics 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "SENG4920 Ethics and Management 2021.01"}], "Handbook Information": {"Title": "COMP4920 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4920/"}}, {"Course Code": "COMP4951", "Course Name": "Research Thesis A", "Course Name - SiMs": "Research Thesis A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "4", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. YouStudents must identifyfind a supervisor and project prior to enrolling in this course.by the end of week 1 of Thesis A. This is the first course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4953 Research Thesis C 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4952 Research Thesis B 2021.01"}], "Handbook Information": {"Title": "COMP4951 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4951/"}}, {"Course Code": "COMP4952", "Course Name": "Research Thesis B", "Course Name - SiMs": "Research Thesis B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "4", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. You must identify a supervisor and project prior to enrolling in this course. This is the first course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4951 Research Thesis A 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4953 Research Thesis C 2021.01"}], "Handbook Information": {"Title": "COMP4952 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4952/"}}, {"Course Code": "COMP4953", "Course Name": "Research Thesis C", "Course Name - SiMs": "Research Thesis C", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "4", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. You must identify a supervisor and project prior to enrolling in this course. This is the first course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4951 Research Thesis A 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4952 Research Thesis B 2021.01"}], "Handbook Information": {"Title": "COMP4953 http://www.cse.unsw.edu.au/~cs4953/", "URL": ""}}, {"Course Code": "COMP4961", "Course Name": "Computer Science Thesis A", "Course Name - SiMs": "Computer Science Thesis A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. You must identify a supervisor and project prior to enrolling in this course. This is the first course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4962 Computer Science Thesis B 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4963 Computer Science Thesis C 2021.01"}], "Handbook Information": {"Title": "COMP4961 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4961/"}}, {"Course Code": "COMP4962", "Course Name": "Computer Science Thesis B", "Course Name - SiMs": "Computer Science Thesis B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. You must have successfully completed COMP4961 prior to enrolling in this course. This is the second course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) RESEARCH-ST Independent research Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4963 Computer Science Thesis C 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4961 Computer Science Thesis A 2021.01"}], "Handbook Information": {"Title": "COMP4962 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4962/"}}, {"Course Code": "COMP4963", "Course Name": "Computer Science Thesis C", "Course Name - SiMs": "Computer Science Thesis C", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The thesis provides an opportunity for you to bring together engineering principles learned over your previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects are complex, open-ended problems that allow room for your creativity, and the acquisition, analysis and interpretation of results. There are multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning. The thesis requires you to formulate problems in scientific or engineering terms, manage an technical project and find solutions by applying scientific and engineering methods. You will also develop their ability to work in a research and development environment. You must have successfully completed COMP4962 prior to enrolling in this course. This is the third and final course of the 3 course thesis structure.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "Level 4", "Teaching Strategies and Rationale": "The course is taught as an individual research project, to develop a level of research skills and autonomy.", "Course Aims": "The thesis provides an opportunity for the student to bring together engineering principles learned over their previous years of study and apply these principles to innovatively solve problems such as the development of a specific design, process and/or the investigation of a hypothesis. Thesis projects must be complex, open-ended problems that allow room for student creativity, and the acquisition, analysis and interpretation of results. There must be multiple possible solutions or conclusions at the outset and sufficient complexity to require a degree of project planning from the student. The thesis requires the student to formulate problems in engineering terms, manage an engineering project and find solutions by applying engineering methods. Students also develop their ability to work in a research and development environment.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) RESEARCH-ST Independent research Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Develop a design or a process or investigate a hypothesis following industry and professional engineering standards. "}, {"Code": "CLO2", "Description": "Critically reflect on a specialist body of knowledge related to their thesis topic. "}, {"Code": "CLO3", "Description": "Apply scientific and engineering methods to solve an engineering problem. "}, {"Code": "CLO4", "Description": "Analyse data objectively using quantitative and mathematical methods. "}, {"Code": "CLO5", "Description": "Demonstrate oral and written communication in professional and lay domains. "}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Thesis Project and Report", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4962 Computer Science Thesis B 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP4961 Computer Science Thesis A 2021.01"}], "Handbook Information": {"Title": "COMP4963 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs4963/"}}, {"Course Code": "COMP6080", "Course Name": "Web Front-End Programming", "Course Name - SiMs": "Web Front-End Programming", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course introduces the fundamentals and advanced techniques of programming for the web front-end in JavaScript.\nThe topic covered are: JavaScript, CSS, the context of web front-end programming, Javascript Frameworks, Web Web user interface design and Web front-end security.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "How much you get out of this course is proportional with how much effort you put into the course. C++ is a complex language complemented by extensive library resources. It is impossible to cover every feature in detail and, as such, we will often introduce material in brief and then expect you to expand your understanding through reading, tutorial questions and programming assignments. You are expected to attend all lectures and tutorials.\nThe programming assignments are serious projects and they will get more and more challenging as we cover more advanced topics. The only way to learn programming is to work at it. So be prepared to spend a lot of time in front of a computer.\nThe first part of the course focuses on \"using abstractions\". We make a serious attempt at learning how to write C++ programs effectively using the existing abstractions provided by the C++ Standard Library (including the C++ Standard Template Library).\nThe second part of the course focuses on \"building abstractions\". We look at how abstractions are built in C++ and learn how to define new abstractions.", "Course Aims": "This course aims to introduce the students to intermediate and advanced programming using C++. Students will be exposed to the core features of C++ with emphasis on how to incorporate them into well designed C++ programs. The first part of the course will introduce the basic features of C++, including references, functions, classes, C++ STL, operator overloading,  and copy control. The second part will focus on more advanced topics such as exception handling, memory management, templates and generic programming, C++ template metaprogramming, input/output with C++ iostreams, C++ and efficiency issues, RTTI and effective C++ design guidelines. The structure, principles, and fundamental uses of the C++ Standard Library (including the Standard Template Library) will be introduced.\nThe course will be useful to those who wish to get a strong understanding of practical aspects of C++.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "A knowledge of  fundamental Javascript  semantics sufficient to design,  construct, test and debug Javascript programs."}, {"Code": "CLO2", "Description": "An understanding of  the context of web-front end programming, including CSS and the DOM, sufficient to successfully construction of programs for the web-front end."}, {"Code": "CLO3", "Description": "A knowledge of modern web front-end coding practices including Javascript frameworks and CSS framework, allowing effective and efficient integration of existing commonly-used components into a web application."}, {"Code": "CLO4", "Description": "An ability to  use modern Javascript asynchronous programming techniques for the web-front end to produce robust and maintainable code, and a basis  to build on in understanding concurrency in other contexts."}, {"Code": "CLO5", "Description": "A knowledge of basic web-frontend security issues sufficient to understand and avoid common security vulnerabilities when constructing web applications."}, {"Code": "CLO6", "Description": "An awareness of user interface design as it applies to the web, including accessibility, allowing adoption of sound practices and providing a basis to build  an understanding of interface design generally."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Programming Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Programming Assignment 2", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Programming Assignment 3", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}, {"Assessment Type": "Lab", "Assessment Name": "work Programming Labs", "Weighting (%)": "15"}], "Relationships": [], "Handbook Information": {"Title": "COMP6080 Course Outline", "URL": "https://webcms3.cse.unsw.edu.au/"}}, {"Course Code": "COMP6324", "Course Name": "Internet of Things Service Design and Engineering", "Course Name - SiMs": "IoT Services Engineering", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course aims to introduce the students to core concepts and practical skills for designing and engineering IoT services and applications. Specifically, the course aims to expose students to IoT business strategy, requirements, IoT technologies, solution design and implementation. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "The course is designed to encourage students to learn by doing. We provide timely feedback for learning via small, step-by-step weekly practical project activities and tests that gradually build up knowledge and practical skills.Through face-to-face lectures and online videos, we introduce concepts and theory with practical examples. In project mentoring meetings, we discuss problems and solutions using an agile software engineering methodology.", "Course Aims": "The primary aim of this course is to identify and disseminate critical knowledge and skills related to engineering IoT services to industry professionals. This course will examine the concepts and economy surrounding IoT, with a knowledge about the business benefits versus technology risks of IoT.\nThe engineering process for IoT involves understanding organisational IoT Strategy. Accordingly, students will learn about the IoT Business Innovation Framework and Opportunity Management. Armed with this knowledge, students will be encouraged to administer critical thinking and work in teams on practical projects in order to strengthen expertise in both architecting as well as implementing an IoT solution. Moreover, students will be given the opportunity to pitch potential IoT solutions to a group of senior executives in an investment committee.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to use Internet of Things (IoT) services concepts to analyze the overall impact of IoT on different application domains in both industry and government. "}, {"Code": "CLO2", "Description": "be able to design software architectures for IoT solutions, and apply the software engineering framework for IoT solutions"}, {"Code": "CLO3", "Description": "be able to develop services and analytics on existing IoT infrastructure"}, {"Code": "CLO4", "Description": "be able to pitch an IoT solution to non-technical people, such as a group of senior executives in an investment committee or venture capitalists."}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "20"}, {"Assessment Type": "Portfolio", "Assessment Name": "Project Sprint Log", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Project activities", "Weighting (%)": "60"}, {"Assessment Type": "Other", "Assessment Name": "Project meetings participation", "Weighting (%)": "10"}], "Relationships": [], "Handbook Information": {"Title": "COMP6324 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6324/"}}, {"Course Code": "COMP6441", "Course Name": "Security Engineering and Cyber Security", "Course Name - SiMs": "Security Engineering", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Introduction to computer security, prevention of cybercrime and cyberterror. The principles of engineering secure systems. How to think like a security engineer.\nEngineering secure systems. How security fails. Security analysis and design. Private and public cryptographic protocols. Introduction to information security: Confidentiality, Integrity, Authentication, Non-repudiation, hashing, signatures, bits of security. Physical security, social engineering, sniffing, intrusion detection, prevention and response, firewalls, honeypots. Overview of vulnerabilities and exploits including areas such as buffer overflow, inter overflow, heap attacks, Return-Oriented-Programming, heap attacks. Principles of risk and security. Case studies drawn from the history of hacking and from current events.\nAdditional topics drawn from recent developments and current research in applied computer security.\nThere are numerous formative assessments and activities throughout the course to provide feedback and learning opportunities. These do not directly contribute to your final grade but are expected to be used to provide evidence of your capabilities in your portfolio.\nA programming background is not required but it will be helpful in some of the more applied topics. Students need a keen devious and analytical mind. To get the most from this course students will need to engage in independent study and research and be able to act as independent self-directed learners.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Lecture content will be made available in video form. Students are expected to watch the relevant video before each lecture and attend ready to interact with the concepts in the video\nConsiderable emphasis will be placed on practical work, in the form of labs and a major project.\nStudents are expected to demonstrate in a sustained manner over an extended period of time (at least one year) that they have significant awareness and understanding of, have engaged in continuous reflection about, and have successfully planned to improve and develop their abilities in the overall stream capabilities. They achieve this by developing a portfolio over their study in security courses.\nStudents in both level courses engage in a large amount of self-directed and formative study and activity outside of the scheduled face to face hours they are mentored in this by their tutor and present their progress regularly in tutorial presentations and whole of class seminars and via online peer reviews.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses.\nStudents in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "This course aims to:\nintroduce students to core elements of cyber security\nprepare students for further study in the area", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have knowledge of the main elements of contemporary cyber security (such as vulnerabilities, exploits, root kits, malware, etc.)make reasonable assessments of likely future trends and emerging risks in cyber security, based on an understanding of the historical context and current developments in the field"}, {"Code": "CLO2", "Description": "Understand how security exploits are used, their specific strengths/weaknesses and countermeasures.demonstrate an understanding of the relationship of cyber security to related fields including safety science, psychology, organisational culture, physical and electronic security, cybercrime, military, intelligence, communication, and disaster planning and response"}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles in security engineering design (such as privacy, risk, errors, failure critical systems, defence in depth, single points of failure, human weakness, standards, obscurity)analyse real world scenarios and apply a security engineering approach to make appropriate decisions taking into consideration key factors such as cost, human factors, risk, and privacy"}, {"Code": "CLO4", "Description": "Be able to analyse design and justify security engineerdemonstrate and reflect upon professional competencies including analysis, time and project management, reasonableness checking, solutions to security problems and scenarios.elf directed research, teamwork, community building, ethical professional behaviour and effective communication"}, {"Code": "CLO5", "Description": "Understand and be able to apply simple cryptographic components (such as aes, sha hashes, dsa, rsa, diffie hellman) to solve security problemsapply fundamental cryptographic primitives and protocols to achieve desired properties (including confidentiality, integrity, and authentication) and explain their weaknesses and appropriate use"}, {"Code": "CLO6", "Description": "Be able to analyse and assapply concepts such as information and work measures, randomness, and attack simple cryptographic solutions to security problems.privacy to design appropriate solutions for real world security problems, or recognise when no effective solutions are likely to be feasible"}, {"Code": "CLO7", "Description": "analyse their prior approach to security in everyday life and reflect on how a security engineering mindset changes this"}], "Assessments": [{"Assessment Type": "Essay", "Assessment Name": "Portfolio", "Weighting (%)": "30"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "35"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "35"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP6841 Extended Security Engineering and Cyber Security 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3441 Security Engineering 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9441 Security Engineering 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6841 Extended Security Engineering and Cyber Security 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "LAWS3040 Regulation for Cyber Security 2021.01"}], "Handbook Information": {"Title": "COMP6441 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6441/"}}, {"Course Code": "COMP6443", "Course Name": "Web Application Security and Testing", "Course Name - SiMs": "Web Application Security", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Web applications are currently the predominant source of software vulnerabilities exploited in in online attacks. There is a growing need and growing demand for web programmers to be security aware.\nThis course covers the main types of web application vulnerabilities and current best practice professional coding and testing practices to be able to successfully develop secure web applications.\nThe course covers OWASP vulnerabilities cross site scripting browser security model and weaknesses Injection attacks DNS Man in the middle Data leakage Spoofing UI and Social vulnerabilities Assurance and Testing Standards. Course coverage will be constantly updated over time to reflect emerging vulnerabilities and practices.\nA programming background is not required but it will be helpful in some of the more applied topics. Students need a keen devious and analytical mind. To get the most from this course students will need to engage in independent study and research and be able to act as independent self directed learners.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students ability to reflect on their own work. Tutorials will provide a forum for students to develop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses. Students in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "This course aims to\nextend students' understanding of security engineering\nstudy vulnerabilities in web applications, and how to exploit/defend them", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of general web application security literacy, including the principal elements of contemporary web application vulnerabilities (such as cross site scripting, code injection, session stealing)."}, {"Code": "CLO2", "Description": "Understanding how these vulnerabilities are used by attackers, their characterising features, weaknesses and countermeasures."}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles of secure web application design and be able to apply these to assess and test web applications and web sites;"}, {"Code": "CLO4", "Description": "Be able to work with web dev teams to design and create secure web applications."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "65"}, {"Assessment Type": "Report", "Assessment Name": "Portfolio", "Weighting (%)": "35"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP6843 Extended Web Application Security and Testing 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6843 Extended Web Application Security and Testing 2021.01"}], "Handbook Information": {"Title": "COMP6443 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6443/"}}, {"Course Code": "COMP6445", "Course Name": "Digital Forensics", "Course Name - SiMs": "Digital Forensics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course addresses the skills and knowledge needed by first responders to a discovered cyber breech, as well as law enforcement and criminal justice.\nThis course covers both forensic theory / professional practice, and looking at the underlying engineering of hiding, finding, interpreting and responding to traces. Students will use of standard forensic tools to extract carve and analyse data as well as learning the low level technical skills and knowledge underlying them. By the end of the course students should be able to write and analyse simple forensic tools as well as being able to use them.\nThe course covers Memory Forensics, Disc Forensics Network, Device Forensics, Stealth Techniques, Anti-forensics, Professional Forensic Practice, (chain of custody, records etc), Logging. Course coverage will be constantly updated over time to reflect emerging forensic practice and methods.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students' ability to reflect on their own work. Tutorials will provide a forum for students to deve lop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses. Students in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "The course aims to\nintroduce students to the key concepts in digital forensics\nenable students to carry out digital forensic investigations", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of the principle elements of digital forensic literacy (such as disc structures, machine memory structure, operating system structure caches logging and redundancy, device design authentication operation and weakness, boot and initialisation sequences, storage encryption, network logging, stealth techniques and anti forensic strategies)."}, {"Code": "CLO2", "Description": "Understand how these elements can be used to extract and infer digital traces of activity, their characterising features, weaknesses and countermeasures."}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles of professional digital forensic practice (including chain of custody and best practice procedures)"}, {"Code": "CLO4", "Description": "Apply an understanding of digital forensics to design and conduct effective forensic investigations."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "65"}, {"Assessment Type": "Report", "Assessment Name": "Portfolio", "Weighting (%)": "35"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP6845 Extended Digital Forensics and Incident Response 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6845 Extended Digital Forensics and Incident Response 2021.01"}], "Handbook Information": {"Title": "COMP6445 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6445/"}}, {"Course Code": "COMP6447", "Course Name": "System and Software Security Assessment", "Course Name - SiMs": "Security Assessment", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course looks at cyber attack and defence. Students learn how to assess and identify vulnerabilities and how vulnerabilities are exploited. Students learn the principles and theory of exploitation, the common security models, and how approaches to exploitation and defence have evolved over time.\nStudents from this course will engage in war games competitions,  analyse real world case studies of vulnerabilities in complex software used on widespread systems, and gain an understanding of the technical process of finding and fixing low-level software vulnerabilities and also of the economics and causal factors involved with their real world use.\nThe course covers techniques and skills including vulnerability classes, Source code auditing Fuzzing Security Bugs Software Security Assurance Taint Analysis Memory Corruption, Overflows, Return Oriented Programming  Course coverage will be constantly updated over time to reflect emerging attack and defence methods. \nThere are numerous formative assessments and activities throughout the course to provide feedback and learning opportunities.  These do not directly contribute to your final grade but are expected to be used to provide evidence of your capabilities in your portfolio. \nStudents need a keen devious and analytical mind.  To get the most from this course students will need to engage in independent study and research and be able to act as independent self directed learners.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students' ability to reflect on their own work. Tutorials will provide a forum for students to deve lop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.", "Course Aims": "The course aims to\nintroduce students to the principal concepts in offensive cyber security\nenable students to analyse vulnerabilities in existing systems\nenable students to develop remedies to prevent exploitation of vulnerabilities", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of the principle elements of offensive cyber security (such as vulnerability classes, source code auditing, fuzzing, security bugs, software security assurance and testing, taint analysis, memory corruption, numeric overflows, return oriented programming)."}, {"Code": "CLO2", "Description": "Recognise and explain how these elements can be exploited by attackers, their characterising features, weaknesses and countermeasures."}, {"Code": "CLO3", "Description": "Given a system being able to identify and analyse its key vulnerabilities and design and implement reliable exploits to make use of this."}, {"Code": "CLO4", "Description": "Given a system being able to identify and analyse its key vulnerabilities and design and implement reliable remedies and countermeasures to prevent successful exploitation."}, {"Code": "CLO5", "Description": "Have an understanding of the key legal, ethical, and professional issues of offensive-defence; and to be able to apply this understanding to design and conduct professional offensive-defence operations."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Mid Semester Exam", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "War Games Practical Assignment", "Weighting (%)": "30"}, {"Assessment Type": "Assignment", "Assessment Name": "Rootkit Group Assignment", "Weighting (%)": "20"}], "Relationships": [], "Handbook Information": {"Title": "COMP6447 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6447/"}}, {"Course Code": "COMP6448", "Course Name": "Security Engineering Masterclass", "Course Name - SiMs": "Security Masterclass", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This is an occasional course that will involve a visiting expert in the security area giving a series of lectures and workshops on an advanced topic in cyber security. The precise timing and topics depend on the visitor. The course will be run in intensive mode.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Intensive mode, micro-course. Offerings run when we have available experts to teach the students cutting edge advanced topics.  We intend to have at least one such visitor each year.   This course can also be made available to paying students from industry. \nNeeds to be short duration to allow for visitors being here for a relatively short time.", "Course Aims": "To educate students in advanced topics in the security space. Topics to be determined by available guest lecturers.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-IN", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Intensive BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of the principle elements of the topic covered and an understanding of how these elements can be used by attackers and defenders, their strengths and weakness. (assessed in theory exam involving both short answers and longer extended response analysis questions)."}, {"Code": "CLO2", "Description": "Be able to use the skills of the class to solve real world problems in non-trivial ways (assessed in final practical exam and a major project which uses the skills of the class in a non-trivial way to solve a significant challenge)."}, {"Code": "CLO3", "Description": "Specific learning outcomes depend on the topics covered by the visiting lecturer."}, {"Code": "CLO4", "Description": "Demonstrate awareness, planning, reflection and development in at least 4 of the Security Stream Capabilities (see document Security Stream Capabilities)"}], "Assessments": [{"Assessment Type": "Portfolio", "Assessment Name": "Reflective Report", "Weighting (%)": "35"}, {"Assessment Type": "Other", "Assessment Name": "Project / Exam", "Weighting (%)": "65"}], "Relationships": [], "Handbook Information": {"Title": "COMP6448 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6448/"}}, {"Course Code": "COMP6449", "Course Name": "Security Engineering Professional Practice", "Course Name - SiMs": "Security Professional Practice", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "The professional practice of cyber security. Students learn how to be effective and ethical cyber security professionals.\nStudents from this course will engage in real world case studies and analyse and critique effective professional responses to situations and challenges. Guest lecturers from Industry will give a number of different views into the world of cyber security professionals , the key issues they face, and current best practice.\nCoverage includes Standards, Audits, Organisational Analysis and Testing, Best Practice, Ethics, Legal, Professionalism. Professional issues and best practice in cybercrime, censorship terrorism, IP, mandatory data breech disclosure, privacy, risk assessment, institutional response to risk, leadership, organisational change management and culture change, Professional Practice and professionalism. Course coverage will be regularly updated over time to reflect emerging best practice in the security engineering profession. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "In this course there will be regular guest lectures from senior industry practitioners and from experts in the course topics (e.g. law, ethical hacking, policy, regulation, law enforcement, national security, and leadership).  The  case studies will be drawn from industry and student will be lightly mentored by industry practitioners and relevant experts (usually the guest speakers, or when senior, their junior staff) in the discussions and analysis of the fortnightly case studies.\nLecture 2 hours/week \u2013 including guest lectures. Seminar 1 hour week. Resources to create online case studies (met by CBA funding) .  One hour/week group discussion tutorial on practice case studies and current issues.", "Course Aims": "This course aims to ensure that graduates are equipped with all of the skills to work as a security professional.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have knowledge of the principle elements of professional security engineering practice (such as Standards, Audits, Organisational Analysis and Testing, Best Practice, Ethics, Legal, Professionalism)"}, {"Code": "CLO2", "Description": "Understand how these elements impact on day to day professional behaviour and on longer term security planning and policy design."}, {"Code": "CLO3", "Description": "Given a security scenario be able to identify the key factors to consider and to then be able to reflectively evaluate these as an effective security professional and make appropriate decisions or select an appropriate course of action. "}, {"Code": "CLO4", "Description": "Capable of evaluating and acting as a professional at responsibility level 5 of the SFIA professional  framework for ICT."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "30"}, {"Assessment Type": "Presentation", "Assessment Name": "Team Project", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Case Studies", "Weighting (%)": "20"}, {"Assessment Type": "Essay", "Assessment Name": "Portfolio", "Weighting (%)": "30"}], "Relationships": [], "Handbook Information": {"Title": "COMP6449 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6449/"}}, {"Course Code": "COMP6451", "Course Name": "Cryptocurrency and Distributed Ledger Technologies", "Course Name - SiMs": "Cryptocurrency and DLT", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "The course considers the requirements for electronic payment systems and how these requirements are realised using distributed ledger technologies. The technical ideas studied include the key cryptographic constructs, economic incentive mechanisms and distributed algorithms underpinning cryptocurrencies such as Bitcoin and Ethereum. The concept of smart contract will be introduced, and the course aims to develop a basic facility with programming smart contracts on one cryptocurrency platform. The course also aims to introduce students to the broader context of the range of alternate designs for distributed ledger technologies, the range of potential applications for these technologies, and the socio-economic, ethical and legal dimensions of their use. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "The course uses lectures, tutorial and laboratory sessions, and individual work to develop an understanding of the requirements for electronic payment systems and the realisation of these requirements using distributed ledger technologies. \nA programming exercise on the Ethereum platform is used to give hands on experience with a particular cryptocurrency platform and the concept of smart contracts. \nThe intended student body for the course is computer science students and the focus of the course is primarily technical, but it includes components relating to the ethical, socio-economic and legal context for these technologies. \nThe broader scope for application of these technologies is addressed via lectures and an individual research assignment that will give students scope to explore applications of personal interest. ", "Course Aims": "The course aims to develop an understanding of the requirements for electronic payment systems and how these requirements are realised using distributed ledger technologies. The technical ideas to be understood include the key cryptographic constructs, economic incentive mechanisms and distributed algorithms underpinning cryptocurrencies such as Bitcoin and Ethereum. The concept of smart contract will be introduced, and the course aims to develop a basic facility with programming smart contracts on one cryptocurrency platform. The course also aims to introduce students to the broader context of the range of alternate designs for distributed ledger technologies, the range of potential applications for these technologies, and the socio-economic, ethical and legal dimensions of their use. ", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to explain the concept of decentralisation and the functional and security requirements for cryptocurrency and distributed ledger applications. "}, {"Code": "CLO2", "Description": "Be able to explain the functioning of the proof of work protocol, cryptographic mechanisms and transactional structures underpinning the design of cryptocurrencies including Bitcoin and Ethereum."}, {"Code": "CLO3", "Description": "Be able to program and deploy simple smart contracts on the Ethereum platform "}, {"Code": "CLO4", "Description": "Be able to make decisions in application settings that take into account the range of design dimensions of distributed ledger technologies, including in consensus protocol design, open versus closed blockchains, levels of privacy, transactional expressiveness, and governance structure. "}, {"Code": "CLO5", "Description": "Be able to factor into to design thinking the ethical, socio-economic and legal dimensions of cryptocurrency and distributed ledger technologies, including their positive and negative repercussions and challenges for regulatory authorities. "}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Individual Assignment - Cryptographic Concepts", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Individual Assignment - Ethereum Programming", "Weighting (%)": "20"}, {"Assessment Type": "Essay", "Assessment Name": "Individual Assignment - Consortium Blockchains and/or DLT Applications", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Examination", "Weighting (%)": "40"}], "Relationships": [], "Handbook Information": {"Title": "COMP6451 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6451/"}}, {"Course Code": "COMP6452", "Course Name": "Software Architecture for Blockchain Applications", "Course Name - SiMs": "Blockchain App Architecture", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course addresses the knowledge that is needed in order to build applications based on blockchain technology, by offering an architectural view of software systems that make beneficial use of it. It provides guidance on assessing the suitability of blockchain, on the roles blockchain can play in an architecture, on designing blockchain applications, and on assessing different architecture designs and tradeoffs. It also serves as a reference on blockchain design patterns and design analysis, and refers to practical examples of blockchain-based applications.\nThe course covers the following:\na general introduction to the topic and to existing blockchain platforms including Bitcoin, Ethereum, and Hyperledger Fabric, and offers examples of blockchain-based applications;\nthe functional aspects of software architecture are covered, describing the main roles blockchain can play in an architecture, as well as its potential suitability and design process;\nnon-functional aspects of blockchain applications, which are often cross-cutting concerns including cost estimation, performance, security;\nReal-world use cases will be covered, offering additional insights from a practical perspective.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "Blockchain technology is playing an increasingly important role in modern transactional applications. This course addresses the knowledge that is needed in order to build applications based on blockchain technology, by offering an architectural view of software systems that make beneficial use of it. It provides guidance on assessing the suitability of blockchain, on the roles blockchain can play in an architecture, on designing blockchain applications, and on assessing different architecture designs and tradeoffs. It also serves as a reference on blockchain design patterns and design analysis, and refers to practical examples of blockchain-based applications.\nThe course is primarily lecture-based because students (a) typically have limited background in blockchain concepts and (b) need to be brought up-to-speed to complete the assignments. Lectures will include many case-studies, to contextualise the concepts. Tutorials are offered each week to provide opportunities to explore the material in more depth. Assignments give the opportunity to explore blockchain scenarios in depth.", "Course Aims": "The course aims to produce graduates who can analyse blockchain scenarios and design effective solutions using blockchain technology.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "explain the principles of blockchain and which roles it can play in an application architecture"}, {"Code": "CLO2", "Description": "decide the suitability of blockchains and how to design applications on them"}, {"Code": "CLO3", "Description": "make functional and non-functional trade-offs for blockchain-based applications"}, {"Code": "CLO4", "Description": "build small applications on blockchain"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignments", "Weighting (%)": "25"}, {"Assessment Type": "Test", "Assessment Name": "Quiz", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP6452 http://www.cse.unsw.edu.au/~cs6452/", "URL": ""}}, {"Course Code": "COMP6714", "Course Name": "Information Retrieval and Web Search", "Course Name - SiMs": "Info Retrieval and Web Search", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Information Retrieval: (a) Document modeling (b) Inverted index construction and compression (c)Vector space model and ranking methods (d) Probabilistic and language models (e) Evaluation methods (f) Relevance feedback and query expansion.Web Search: (a) Web search engine architecture (b) Web crawling and indexing (c) Web structure and usage analytics.The lecture materials will be complemented by projects and assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP6714 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6714/"}}, {"Course Code": "COMP6721", "Course Name": "(In-)Formal Methods: The Lost Art", "Course Name - SiMs": "(In-)Formal Methods", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "(In-)Formal Methods are practical structuring and design patterns that encourage programming that is easy to understand and to maintain. They are only a part of the large body of \u201cgood programming practices,\u201d distinguished from that larger set because \u2013for the methods we consider\u2013 the computer-science community has determined the science behind the structures: we know why they are effective.\nUnusually, this course does not take the traditional route of teaching that science first, and then turning it into practical programming \u201ctools-of-thought.\u201d Instead, we teach the mental tools first, try them on examples and only then, once their effectiveness has been demonstrated, will we look behind the scenes to see where they come from.\nInitially the material will deal with conventional programs, those that must \u201cgive the right output.\u201d (This is known as functional correctness, and a sorting program is a simple example.) Later in the course we will look at additional correctness criteria, such as security (perform this calculation in a way that keeps part of the answer hidden) and randomisation (implement over-the-internet protocols that depend intrinsically on coin-flipping). Those last two topics will draw on up-to-the-minute research.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "Formal Methods is the study and application of theoretical (mathematical) computer-science principles to the construction of correct software, and to the checking that (existing, e.g. legacy) software is correct. At the undergraduate level it is generally considered to be too onerous, and to much of a distraction, to be worth the effort; and it does make higher-than-average mathematical demands on students. Its application to industrial-strength systems requires specialised software tools operated by highly trained software analysts.\n(In-)Formal Methods (intended to be a provocative title) is the collection of program structuring- and design principles that are based on and justified by Formal Methods \u2014 but because Formal Methods has its reputation of being difficult and esoteric, the principles are largely ignored. In spite of their being known and understood by specialists for 40 years, it is rare to find an undergraduate course in which they are taught. As a result, programmers of average aptitude produce code of a very low standard. (Programmers of high natural aptitude discover their own versions of some of these principles for themselves \u2014 eventually.)\nThus this proposal \u2013in its first component\u2013 is to introduce the mathematically justified principles of program structure in the style of \u201cadvanced programming techniques\u201d but without the emphasis on theory that typically dooms Formal Methods courses to small specialised audiences. Good students will find their intuitions justified, and (some) will be stimulated to look into the material more deeply; average students will improve their programming skills significantly.\nThe second component of the course will focus on two up-to-date system paradigms specifically: randomised algorithms and secure computation. The emphasis will be on how the principles set out in the first half of the course can be extended to these more specialised topics.\nMore able students completing the course will be positioned to study Formal Methods (itself) more deeply, a career trajectory that leads to very highly regarded (and -paid) jobs in industry where computer-system correctness is at a premium. Furthermore, the methods apply equally to hardware as they do to software.\nIt is disjoint from existing courses on formal-methods tools because it doesn\u2019t rely heavily on software tools; it is disjoint from existing courses on (random) algorithms, and on security  because it is not an introduction to those topics per se but rather concentrated on the programming principles that should accompany them.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Students should be able to apply the more abstract, theoretical side of computing to produce better programs, without having to master the theory itself in detail."}, {"Code": "CLO2", "Description": "Students should be able to define program-correctness assertions and loop invariants, and to use static reasoning while developing programs."}, {"Code": "CLO3", "Description": "Students should be able to carry out formally driven program developments by stepwise refinement and change of data representations."}, {"Code": "CLO4", "Description": "Students should be able to use computer-based reasoning tools to carry out automated proofs of program correctness."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignments 1,2,3.", "Weighting (%)": "90"}, {"Assessment Type": "Test", "Assessment Name": "Quiz", "Weighting (%)": "10"}], "Relationships": [], "Handbook Information": {"Title": "COMP6721 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6721/"}}, {"Course Code": "COMP6733", "Course Name": "Internet of Things Experimental Design Studio", "Course Name - SiMs": "Internet of Things", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Internet of Things (IoT) will play a key role in the next frontier of computing. The new course will provide an experimental approach to cover fundamental design principles behind building IoT applications, with hands-on experience with a popular end-to-end IoT platform.Topics covered will include a selection from: IoT technology and services, IoT system architecture, Low Power communications (Bluetooth Low Energy and 6LoWPAN) and security issues, sensors and sensor data smoothing and filtering, light-weight in-situ machine learning and data fusion, inertial sensing, activity recognition and fitness morning, voice-based stress level sensing, biometric authentication, anonymity, cloud services for IoT. This course assumes familiarity with a high level programming language such as Java and Python AND a low level programming language such as C.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "Course will be one 2-hour lectures/discussion and a 3-hour guided laboratory work during the first half of the term. In Week 6, each team will submit a final project proposal. Each project will have defined millstones and a final result. Teams will work on their final projects in the second half of the term and each week the whole class will meet for a 2-hour progress report session during lecture time. \nThe aim of the lectures is to facilitate learning and understanding of the important concepts within the course syllabus. In Weeks 1 - 6, lecture notes will be available at the course web site for downloading before the lecture. \nThis course will also provide practical training on programming IoT devices. Each student will be loaned a number of wireless networked embedded IoT devices during the duration of this course for them to work on the laboratory exercises and project. \nGuided laboratory on embedded IoT device programming will take place from Weeks 2 - 6  for 3 hours per week. Laboratory worksheet in self-study style will be issued on the course web site. A laboratory demonstrator will be available to help students with their work. Each laboratory exercise comes with an assessment exercise. Students are expected to demonstrate the assessment to their laboratory demonstrators in the next lab session that they have completed their exercise satisfactorily. \nThe aim of project is to give students an opportunity to work on an end-to-end IoT solution for a real-world problem. The project work will be done in teams of up to 3 students. ", "Course Aims": "The course aims to introduce students to sophisticated IoT wireless networked embedded hardware and services and their use in solving real-world problems.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a working knowledge of the fundamental building blocks of Internet of Things such as low power communications and networking, light-weight in-situ signal processing, classification and data fusion, security and privacy, and cloud services. "}, {"Code": "CLO2", "Description": "Will be able to demonstrate their knowledge by both describing aspects of IoT building blocks and solving real-world problems using end-to-end IoT solutions. "}, {"Code": "CLO3", "Description": "Will have practical experience with IoT technologies covered in the laboratory exercises and final project undertaken."}, {"Code": "CLO4", "Description": "Will have practical experience with teamwork and project management with final project undertaken. "}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Lab assignments", "Weighting (%)": "30"}, {"Assessment Type": "Project", "Assessment Name": "Project milestones", "Weighting (%)": "10"}, {"Assessment Type": "Report", "Assessment Name": "Final project report", "Weighting (%)": "30"}, {"Assessment Type": "Project", "Assessment Name": "Final demonstration", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP4335 Wireless Mesh and Sensor Networks 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9335 Wireless Mesh and Sensor Networks 2021.01"}], "Handbook Information": {"Title": "COMP6733 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6733/"}}, {"Course Code": "COMP6741", "Course Name": "Algorithms for Intractable Problems", "Course Name - SiMs": "Algorithms for Intractable Pbs", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "The course focuses on algorithms for solving intractable computational problems, so-called NP-hard problems. Ideally, one would want to design algorithms that solve each instance exactly and in polynomial time. But since no polynomial time algorithm is known for any NP-hard problem, we will relax these requirements and design algorithms that either do not solve the problem exactly, that only solve a subset of instances, or whose worst-case running time is super-polynomial in the input size or some other parameter of the input.\nAmong algorithms that do not solve the problem exactly, we discuss heuristics and approximation algorithms. Heuristics do not guarantee to compute optimal solutions but tend to work well in practice. Approximation algorithms give additional guarantees of the quality of computed solution as compared to the optimal solution.\nAmong algorithms that only solve a subset of instances, we discuss graph classes where NP-hard graph problems often become polynomial-time solvable when the input is restricted to these classes.\nAmong algorithms that do not run in polynomial time, we discuss exponential-time algorithms and parameterized algorithms. In exponential-time algorithms we discuss algorithmic techniques to solve NP-hard problems provably faster than brute-force in the worst case. In parameterized algorithms, a parameter k is associated with each instance and the goal is to design algorithms whose worst-case running time is fast whenever k is small. We will also see lower bounds for problems and how to rule out certain running times under various complexity assumptions.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "", "Teaching Strategies and Rationale": "Teaching Strategies\n    Lectures ... introduce concepts, show examples, contain a tutorial part that allows students to solve problems in groups and discover concepts on their own\n    Assignments ... allow students to solve more significant problems\n    Exams ... open-book mid-session quiz and open-book final exam\nTeaching Rationale\nThis course is taught by interleaving lectures with exercises to enhance problem-solving capabilities and fortify the understanding of newly learned concepts.\nThe assignments further enhance problem-solving at the students' own pace.\nThe exams confront students with additional problems and test their understanding of concepts and problem-solving capabilities.", "Course Aims": "NP-hard problems are often at the core of the most challenging, rewarding, and lucrative computational problems in all areas of science and technology. This course will outline principled ways to approach these problems and will give students a better understanding of when and why NP-hard computational problem can be solved with reasonable resources.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "design and analyse non-trivial exponential time algorithms for NP-hard problems using a variety of algorithmic methods"}, {"Code": "CLO2", "Description": "design parameterized algorithms for NP-hard problems using a variety of algorithmic methods"}, {"Code": "CLO3", "Description": "design new proofs showing that certain parameterizations of problems are not fixed-parameter tractable unless FPT = W[1]"}, {"Code": "CLO4", "Description": "design new proofs showing that certain problems cannot be solved in subexponential time or faster than a specific exponential time bound assuming the (Strong) Exponential Time Hypothesis"}, {"Code": "CLO5", "Description": "design heuristics and approximation algorithms for NP-hard problems, as well as polynomial-time algorithms for restricted classes of instances"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignments", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "Mid-session quiz", "Weighting (%)": "25"}], "Relationships": [], "Handbook Information": {"Title": "COMP6741 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6741/"}}, {"Course Code": "COMP6752", "Course Name": "Modelling Concurrent Systems", "Course Name - SiMs": "Modelling Concurrent Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course tries to make students familiar with state-of-the-art techniques in modelling concurrent systems. This is done by comparing some of the more successful models of concurrency found in the literature. The focus will be on the rationale behind the design decisions underlying those models, viewed from philosophical, mathematical and computational perspectives. The course contains important background knowledge for students aiming at a scientific career in which the design of mathematical models of system behaviour is a component.\nTopics chosen from: semantic models of concurrent and distributed systems (e.g. process algebra, event structures, Petri nets, Chu spaces), operational and denotational semantics, semantic equivalences and implementation relations, linear versus branching time, interleaving versus partial order semantics, true concurrency, algorithms for equivalence checking and their complexity, modal and temporal logic for concurrent systems.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "", "Teaching Strategies and Rationale": "Lectures, weekly homework (graded), tutorials and seminar presentations by students. I believe students learn most by active participation, which is a central part of all these teaching strategies. Moreover, the homework, tutorials and seminar presentations serve as a feedback mechanism by which to measure the effects of the lectures. This will result in a balanced and interactive transfer of skills and information.", "Course Aims": "This course tries to make students familiar with state-of-the-art techniques in modelling concurrent systems. This is done by comparing some of the more successful models of concurrency found in the literature. The focus will be on the rationale behind the design decisions underlying those models, viewed from philosophical, mathematical and computational perspectives. The course contains important background knowledge for students aiming at a scientific career in which the design of mathematical models of system behaviour is a component.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "accurately model simple concurent systems"}, {"Code": "CLO2", "Description": "make an informed choice out of the many models available and decide which one is (most) suitable for the task at hand"}, {"Code": "CLO3", "Description": "prove elementary properties of systems modelled thusly."}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "seminar presentaion", "Weighting (%)": "35"}, {"Assessment Type": "Tutorial", "Assessment Name": "work Homework", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "25"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9152 Comparative Concurrency Semantics 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3152 Comparative Concurrency Semantics 2021.01"}], "Handbook Information": {"Title": "COMP6752 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6752/"}}, {"Course Code": "COMP6771", "Course Name": "Advanced C++ Programming", "Course Name - SiMs": "Advanced C++ Programming", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course introduces the fundamentals and advanced techniques of object-oriented programming in C++.\n\nObject-oriented inheritance techniques. Advanced techniques with functions. Memory and resource management. Namespaces. Run time type information. Templates and generic programming. C++ Template metaprogramming. The Standard Template Library (e.g., algorithms, containers and iterators). Input/Output with C++ iostreams library. Exception handling. C++ and Efficiency issues. Effective C++ design guidelines.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "How much you get out of this course is proportional with how much effort you put into the course. C++ is a complex language complemented by extensive library resources. It is impossible to cover every feature in detail and, as such, we will often introduce material in brief and then expect you to expand your understanding through reading, tutorial questions and programming assignments. You are expected to attend all lectures and tutorials.\nThe programming assignments are serious projects and they will get more and more challenging as we cover more advanced topics. The only way to learn programming is to work at it. So be prepared to spend a lot of time in front of a computer.\nThe first part of the course focuses on \"using abstractions\". We make a serious attempt at learning how to write C++ programs effectively using the existing abstractions provided by the C++ Standard Library (including the C++ Standard Template Library).\nThe second part of the course focuses on \"building abstractions\". We look at how abstractions are built in C++ and learn how to define new abstractions.", "Course Aims": "This course aims to introduce the students to intermediate and advanced programming using C++. Students will be exposed to the core features of C++ with emphasis on how to incorporate them into well designed C++ programs. The first part of the course will introduce the basic features of C++, including references, functions, classes, C++ STL, operator overloading,  and copy control. The second part will focus on more advanced topics such as exception handling, memory management, templates and generic programming, C++ template metaprogramming, input/output with C++ iostreams, C++ and efficiency issues, RTTI and effective C++ design guidelines. The structure, principles, and fundamental uses of the C++ Standard Library (including the Standard Template Library) will be introduced.\nThe course will be useful to those who wish to get a strong understanding of practical aspects of C++.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand the core features of C++ that object-oriented C++ would typically deploy, and why"}, {"Code": "CLO2", "Description": "Understand the subset of C++ that generic (template-based) C++ would typically deploy, and why"}, {"Code": "CLO3", "Description": "Gain a sound grounding in C++ fundamentals from which they can build upon and learn other OO languages such as Java and C#"}, {"Code": "CLO4", "Description": "Understand, write and maintain C++ programs"}, {"Code": "CLO5", "Description": "Use the core features of C++ effectively"}, {"Code": "CLO6", "Description": "Ability to use a range of provisions from the standard library, including streams, exceptions, containers, iterators, algorithms and function objects;"}, {"Code": "CLO7", "Description": "Ability to create function templates, class template and iterators"}, {"Code": "CLO8", "Description": "Ability to deploy good C++ programming practices"}, {"Code": "CLO9", "Description": "Practical ways to deal with memory and performance issues associated with C++"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Ass1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Ass2", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Ass3", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP3171 Object-Oriented Programming 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9171 Object-Oriented Programming 2021.01"}], "Handbook Information": {"Title": "COMP6771 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6771/"}}, {"Course Code": "COMP6841", "Course Name": "Extended Security Engineering and Cyber Security", "Course Name - SiMs": "Extended Security Engineering", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Introduction to computer security, cybercrime, and cyberterror. The principles of engineering secure systems. How to think like a security engineer.\nEngineering secure systems. How security fails. Security analysis and design. Private and public cryptographic protocols. Introduction to information security: Confidentiality, Integrity, Authentication, Non-repudiation, hashing, signatures, bits of security. Physical security, social engineering, sniffing, intrusion detection, prevention and response, firewalls, honeypots. Overview of vulnerabilities and exploits including areas such as buffer overflow, inter overflow, heap attacks, Return-Oriented-Programming, heap attacks. Principles of risk and security. Case studies drawn from the history of hacking and from current events.\nAdditional topics drawn from recent developments and current research in applied computer security.\nThere are numerous formative assessments and activities throughout the course to provide feedback and learning opportunities. These do not directly contribute to your final grade but are expected to be used to provide evidence of your capabilities in your portfolio.\nA programming background is required , especially for the more applied topics. Students need a keen devious and analytical mind. To get the most from this course students will need to engage in independent study and research and be able to act as independent self-directed learners.\nThis is the extended version of COMP6441. In addition to the COMP6441 material above, this course includes coverage of reversing x86 machine code into C/C++ and an introduction to malware decomposition and analysis\nNote: This course requires knowledge of C programming", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Lecture content will be made available in video form. Students are expected to watch the relevant video before each lecture and attend ready to interact with the concepts in the video\nConsiderable emphasis will be placed on practical work, in the form of labs and a major project.\nStudents are expected to demonstrate in a sustained manner over an extended period of time (at least one year) that they have significant awareness and understanding of, have engaged in continious reflection about, and have successfully planned to improve and develop their abilities in the overall stream capabilities. They achieve this by developing a portfolio over their study in security courses.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses. Students in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "This course aims to:\nintroduce students to core elements of cyber security\nprepare students for further study in the area", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have knowledge of the main elements of contemporary cyber security (such as vulnerabilities, exploits, root kits, malware, etc.)make reasonable assessments of likely future trends and emerging risks in cyber security, based on an understanding of the historical context and current developments in the field"}, {"Code": "CLO2", "Description": "Understand how security exploits are used, their specific strengths/weaknesses and countermeasures.demonstrate an understanding of the relationship of cyber security to related fields including safety science, psychology, organisational culture, physical and electronic security, cybercrime, military,  intelligence, communication, and disaster planning and response"}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles in security engineering design (such as privacy, risk, errors, failure critical systems, defence in depth, single points of failure, human weakness, standards, obscurity)analyse real world scenarios and apply a security engineering approach to make appropriate decisions taking into consideration key factors such as cost, human factors, risk, and privacy"}, {"Code": "CLO4", "Description": "Be able to analyse design and justify security engineerdemonstrate and reflect upon professional competencies including analysis, time and project management, reasonableness checking, solutions to security problems and scenarios.elf directed research, teamwork, community building, ethical professional behaviour and effective communication"}, {"Code": "CLO5", "Description": "Understand and be able to apply simple cryptographic components (such as aes, sha hashes, dsa, rsa, diffie hellman) to solve security problemsapply fundamental cryptographic primitives and protocols to achieve desired properties (including confidentiality, integrity, and authentication) and explain their weaknesses and appropriate use"}, {"Code": "CLO6", "Description": "Be able to analyse and assapply concepts such as information and work measures, randomness, and attack simple cryptographic solutions to security problems.privacy to design appropriate solutions for real world security problems, or recognise when no effective solutions are likely to be feasible"}, {"Code": "CLO7", "Description": "Demonstrate an understanding of the principles of compilation transformation and memory use in the context of security vulnerabilities, and of the structure of compiled binaries and the relationship between a high level language specification and the ultimate machine code target.analyse their prior approach to security in everyday life and reflect on how a security engineering mindset changes this"}, {"Code": "CLO8", "Description": "Be able to analyse a program binary and determine the likely execution behaviour and security weaknessexplain the main classes of memory corruption vulnerabilities and the relative strengths and weaknesses of currently deployed countermeasures"}, {"Code": "CLO9", "Description": "Develop an understanding of the main classes of memory corruption vulnerabilities and an appreciation of the relative strengths and weaknesses of currently deployed countermeasursuccessfully attack common vulnerabilities in web based systems and binaries"}, {"Code": "CLO1", "Description": " Apply understanding of memory corruption vulnerabilities to make informed defensive security decisions in real world situations"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Practical Exam", "Weighting (%)": "35"}, {"Assessment Type": "Examination", "Assessment Name": "Final Theory Exam", "Weighting (%)": "35"}, {"Assessment Type": "Essay", "Assessment Name": "Portfolio", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP3441 Security Engineering 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP6441 Security Engineering and Cyber Security 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9441 Security Engineering 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6441 Security Engineering and Cyber Security 2021.01"}], "Handbook Information": {"Title": "COMP6841 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6841/"}}, {"Course Code": "COMP6843", "Course Name": "Extended Web Application Security and Testing", "Course Name - SiMs": "Extended WebApp Security", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Web applications are currently the predominant source of software vulnerabilities exploited in in online attacks. There is a growing need and growing demand for web programmers to be security aware.\nThis course covers the main types of web application vulnerabilities and current best practice professional coding and testing practices to be able to successfully develop secure web applications.\nThe course covers OWASP vulnerabilities cross site scripting browser security model and weaknesses Injection attacks DNS Man in the middle Data leakage Spoofing UI and Social vulnerabilities Assurance and Testing Standards. Course coverage will be constantly updated over time to reflect emerging vulnerabilities and practices.\nThere are numerous formative assessments and activities throughout the course to provide feedback and learning opportunities. These do not directly contribute to your final grade but are expected to be used to provide evidence of your capabilities in your portfolio.\nA programming background is required. Students also need a keen devious and analytical mind. To get the most from this course students will need to engage in independent study and research and be able to act as independent self directed learners.\nThis is the extended version of COMP6443. This course includes the material of COMP6443 plus penetration testing, and red teaming. Students will work in teams to conduct penetration tests and report on them to real and simulated clients.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students ability to reflect on their own work. Tutorials will provide a forum for students to develop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses. Students in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of general web application security literacy, including the principal elements of contemporary web application vulnerabilities (such as cross site scripting, code injection, session stealing)."}, {"Code": "CLO2", "Description": "Understanding how these vulnerabilities are used by attackers, their characterising features, weaknesses and countermeasures."}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles of secure web application design and be able to apply these to assess and test web applications and web sites; and to be able to work with web dev teams to design and create secure web applications."}, {"Code": "CLO4", "Description": "Understand and be able to apply the key principles of, and best practice for, ethical penetration testing including designing, carrying out, and client reporting for penetration testing and red team testing."}, {"Code": "CLO5", "Description": "Have a knowledge and understanding of key professional legal and ethical issues in penetration testing and be able to consider and address these in a range of practical scenarios."}, {"Code": "CLO6", "Description": "Be able to work with web dev teams to design and create secure web applications."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Final Exam", "Weighting (%)": "65"}, {"Assessment Type": "Report", "Assessment Name": "Portfolio", "Weighting (%)": "35"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP6443 Web Application Security and Testing 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6443 Web Application Security and Testing 2021.01"}], "Handbook Information": {"Title": "COMP6843 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6843"}}, {"Course Code": "COMP6845", "Course Name": "Extended Digital Forensics and Incident Response", "Course Name - SiMs": "Extended Digital Forensics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course addresses the skills and knowledge needed by first responders to a discovered cyber breech, as well as law enforcement and criminal justice.\nThis course covers both forensic theory / professional practice, and looking at the underlying engineering of hiding, finding, interpreting and responding to traces. Students will use of standard forensic tools to extract carve and analyse data as well as learning the low level technical skills and knowledge underlying them. By the end of the course students should be able to write and analyse simple forensic tools as well as being able to use them.\nThe course covers Memory Forensics, Disc Forensics Network, Device Forensics, Stealth Techniques, Anti-forensics, Professional Forensic Practice, (chain of custody, records etc), Logging. Course coverage will be constantly updated over time to reflect emerging forensic practice and methods.\nThis is the extended version of COMP6445. This course includes the material of COMP6445 plus malware analysis and incident response.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Computing is best learned by practice, and labs and programming assignments are a critical component of the course. These forums allow students to practice design and implementation skills, and to develop teamwork skills. The portfolio will assist in developing students' ability to reflect on their own work. Tutorials will provide a forum for students to deve lop design skills and to practice presentations.\nLectures will be split between discussion of concepts, discussion of practical work (and practical demonstrations), revision work, and extension lectures. Study material will be available in both video and note form before each lecture.\nStudents in the standard level courses are given weekly formative activities to work on in their own time and which they report on in their portfolio - extended course students are not expected to do these and are given a different set which concentrates on the extended material and spend a much reduced amount of time and effort on the introductory standard topics e.g. for the web application course the standard course students do an extensive set of exercises and projects on each of the OWASP top 10 vulnerability classes - whereas extended students only do exercises on the harder categories and do many less of those.\nExtended students do their course content project of the portfolio on the extended topics, standard students do it on the standard topics. Extended level courses have an equivalent assessment structure to the standard level courses (exams, portfolios) but more advanced content and skills are assessed.   Extended courses have an additional hour of teaching to develop the extended material. Students in standard level courses are welcome to attend at this time as optional extension classes. Students in the extended version are not required to attend all classes run for the standard level courses. Students in both standard and extended courses are expected to spend 150 hours on the course.", "Course Aims": "The course aims to\nintroduce students to the key concepts in digital forensics\nenable students to carry out digital forensic investigations", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a knowledge of the principle elements of digital forensic literacy (such as disc structures, machine memory structure, operating system structure caches logging and redundancy, device design authentication operation and weakness, boot and initialisation sequences, storage encryption, network logging, stealth techniques and anti forensic strategies)."}, {"Code": "CLO2", "Description": "Understand how these elements can be used to extract and infer digital traces of activity, their characterising features, weaknesses and countermeasures."}, {"Code": "CLO3", "Description": "Have an understanding of issues and key principles of professional digital forensic practice (including chain of custody and best practice procedures)"}, {"Code": "CLO4", "Description": "Apply an understanding of digital forensics to design and conduct effective forensic investigations."}, {"Code": "CLO5", "Description": "Be able to effectively and efficiently investigate and deal with security incidents."}, {"Code": "CLO6", "Description": "Be able to analyse and counter malware attacks"}, {"Code": "CLO7", "Description": "Be able to write and analyse simple forensic tools as well as being able to use them."}], "Assessments": [{"Assessment Type": "Report", "Assessment Name": "Portfolio", "Weighting (%)": "35"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "65"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP6445 Digital Forensics 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP6445 Digital Forensics 2021.01"}], "Handbook Information": {"Title": "COMP6845 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs6845/"}}, {"Course Code": "COMP9020", "Course Name": "Foundations of Computer Science", "Course Name - SiMs": "Foundations of Comp. Science", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Scope: * Mathematical methods for designing correct and efficient programs.* Mathematics for algorithm analysis.* Logic for proving and verification.Topics: * Introduction to set and relation theory* Propositional logic and boolean algebras* Induction, recursion and recurrence relations* Order of growth of functions.* Structured counting (combinatorics)* Discrete probability* Graph theory* Trees for algorithmic applications", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "demonstrate an increased level of mathematical maturity to assist with the fundamental problem of finding, formulating, and proving properties of programs."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final exam", "Weighting (%)": "60"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "40"}], "Relationships": [], "Handbook Information": {"Title": "COMP9020 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9020/"}}, {"Course Code": "COMP9021", "Course Name": "Principles of Programming", "Course Name - SiMs": "Principles of Programming", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "This is a first programming course. It provides an introduction to programming in Python and covers the following essentials:\nProgram design and implementation in a high level language, with procedural and object oriented constructs and some functional features. Fundamental programming techniques, data structures and algorithms. Debugging and testing. Simulation. Applications in different areas, including those involving graphical user interfaces and animations.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "Lectures introduce the material. Supervised labs in the first few weeks are meant to have individual contact, resolve any technical issue that might arise in relation to your working environment, and give students a chance to start practicing and get some immediate feedback on their work and answers to their questions. From week 5 onwards, students will be expected to practice without direct supervision, but of course email and the MessageBoard are there for them to get help when needed, and they can also contact the LIC would they need a consultation. Moreover, from week 5 onwards, programming exercises will still be posted to guide students in building programming and problem solving skills, and to prepare them for the practical component of the midterm and final exams. Also, from week 2 to week 11 included, programming quizzes will be released after the lecture and their answers should be submitted within week. This will help students master the fundamental notions and techniques that will have been presented during lectures, keep up to date with the current material, and give them confidence that they are well on track. The three assignments are where the bulk of the work will be done. Assignments will allow students to turn theory into practice, transform passive knowledge into active knowledge, design solutions to problems, and experience the many ways of making mistakes and correcting them when translating an algorithmic solution to an implementation.\n ", "Course Aims": "The aim of the course is to provide students with a solid foundation on fundamental programming concepts and principles, and to become proficient in the programming language Python, including object-oriented features and the tkinter library to create widgets. Students will learn to design solutions to a broad range of problems and implement those solutions in the form of small to medium programs, using appropriate programming techniques and tools.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Know how to dDesign, implement and test programs written in a language with procedural, object-oriented, and functional constructs."}, {"Code": "CLO2", "Description": "Be proficient inUse the Python language proficiently, including advanced syntax and programming techniques."}, {"Code": "CLO3", "Description": "Gain insights oExplain what happens behind the scene when operating on Python data types, with an understanding of efficiency and memory use."}, {"Code": "CLO4", "Description": "Have a first acquaintance withemploy fundamental data structures and algorithms."}, {"Code": "CLO5", "Description": "Know how to dDesign programs to solve small to medium scale problems."}, {"Code": "CLO6", "Description": "Be able to wWrite clear, reliable, well-structured, well-tested, well-documented programs."}, {"Code": "CLO7", "Description": "Be proficient in the use ofUse appropriate tools, in particular for editing, testing and debugging."}, {"Code": "CLO8", "Description": "Know how to plot data in various ways, record animation movies."}, {"Code": "CLO9", "Description": "Be exposed to a variety of problems related to more specialised fields and taught in other courses (Turing machines, k-clustering, Prolog, Nash equilibrium, cryptography, fractals...)"}, {"Code": "CLO1", "Description": " Gain the opportunity to study the design and implementation of a variety of widgets."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignments", "Weighting (%)": "206"}, {"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "204"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "650"}], "Relationships": [], "Handbook Information": {"Title": "COMP9021 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9021"}}, {"Course Code": "COMP9024", "Course Name": "Data Structures and Algorithms", "Course Name - SiMs": "Data Structures & Algorithms", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Data types and data structures: abstractions and representations; lists, stacks, queues, heaps, graphs; dictionaries and hash tables; search trees; searching and sorting algorithms.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020111 Data Structures", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-IN Blended in-person / online Intensive", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand the basic data structures and algorithms."}, {"Code": "CLO2", "Description": "Be able to analyze the complexities of software."}, {"Code": "CLO3", "Description": "Be able to design and select appropriate data structures and algorithms for applications."}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}], "Relationships": [], "Handbook Information": {"Title": "COMP9024 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9024"}}, {"Course Code": "COMP9032", "Course Name": "Microprocessors and Interfacing", "Course Name - SiMs": "Microprocessors & Interfacing", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Instruction Set Architecture (ISA), floating point number representation, computer arithmetic, assembly and machine language programming, machine language fundamentals; addressing modes; instruction repertoire, assembly language programming methodology, interrupts and I/O interfacing (hardware and software), serial communication, timers, analog input and output, converting analog signals to digital signals (data acquisition), taking input from a variety of sensors and driving actuators, buses and memory system, low level device drivers.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9282 Extended Microprocessors and Interfacing 2021.01"}], "Handbook Information": {"Title": "COMP9032 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9032"}}, {"Course Code": "COMP9044", "Course Name": "Software Construction: Techniques and Tools", "Course Name - SiMs": "Software Construction", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Software system decomposition and design. Overview of the software development life-cycle. Command languages. Version control and configuration management, programming for reliability. Testing and debugging techniques. Profiling and code improvement techniques. Practical work involving programming-in-the-large.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have practical experience in programming the scripting languages Perl, Unix shell and Python."}, {"Code": "CLO2", "Description": "Have a broader & deeper knowledge of building software systems"}, {"Code": "CLO3", "Description": "More appreciation of the use of specific technologies and strategies during software development"}, {"Code": "CLO4", "Description": "Exposure to tools for version control, performance improvement, configuration and debugging,"}, {"Code": "CLO5", "Description": "Improvement of your ability to articulate & communicate concepts related to programming & systems"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "15"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab Work", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP2041 Software Construction: Techniques and Tools 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP2041 Software Construction: Techniques and Tools 2021.01"}], "Handbook Information": {"Title": "COMP9044 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9044/"}}, {"Course Code": "COMP9101", "Course Name": "Design and Analysis of Algorithms", "Course Name - SiMs": "Design &Analysis of Algorithms", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Techniques for design and performance analysis of algorithms for a variety of computational problems. Asymptotic notations, bounding summations, recurrences, best-case, worst-case and average-case analysis. Design techniques: divide-and-conquer, dynamic programming and memorisation, greedy strategy, backtracking, branch-and-bound. Algorithms: sorting and order statistics, trees, graphs and flow networks, matrices, arithmetic circuits. Intractability: classes P, NP, and NP-completeness, approximation algorithms.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3120 Introduction to Algorithms 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3121 Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9801 Extended Design & Analysis of Algorithms 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3121 Algorithms and Programming Techniques 2021.01"}], "Handbook Information": {"Title": "COMP9101 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9101"}}, {"Course Code": "COMP9102", "Course Name": "Programming Languages and Compilers", "Course Name - SiMs": "Programming Lang & Compilers", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Covers the fundamental principles in programming languages and implementation techniques for compilers (emphasis on compiler front ends). Course contents include: program syntax and semantics, formal translation of programming languages, finite-state recognisers and regular expressions, context-free parsing techniques such as LL(k) and LR(k), attribute grammars, syntax-directed translation, type checking and code generation. Lab: implementation of a compiler in a modern programming language for a small programming language.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020107 Compiler Construction", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3131 Programming Languages and Compilers 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3131 Programming Languages and Compilers 2021.01"}], "Handbook Information": {"Title": "COMP9102 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9102"}}, {"Course Code": "COMP9153", "Course Name": "Algorithmic Verification", "Course Name - SiMs": "Algorithmic Verification", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "This course replaces COMP4151, students can not receive credit for both.\nIt is virtually impossible to guarantee the correctness of a system, and in turn the absence of bugs by standard software engineering practice such as code review, systematic testing and good software design alone. The formal methods community has developed various rigorous, mathematically sound techniques and tools that allow the automatic analysis of systems and software. The application of these fully automatic techniques is typically called algorithmic verification.The course will describe several automatic verification techniques, the algorithms they are based on, and the tools that support them. We will discuss examples to which the techniques have been applied, and provide experience with the use of several tools.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3153 Algorithmic Verification 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3153 Algorithmic Verification 2021.01"}], "Handbook Information": {"Title": "COMP9153 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9153"}}, {"Course Code": "COMP9154", "Course Name": "Foundations of Concurrency", "Course Name - SiMs": "Foundations of Concurrency", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Concurrency = processes + communication. Communication via shared variables vs message passing. Models of concurrency: true concurrency vs interleaving. Abstractions: atomicity, locks and barriers, semaphores, monitors, threads, RPC, rendezvous. Classical problems: mutual exclusion, dining philosophers, sleeping barber, termination detection, gravitational N-body problem.Practical work: programming assignments and proving of of program safety and liveness properties.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to design and implement multi-threaded, parallel, and distributed programs"}, {"Code": "CLO2", "Description": "be able to talk, write, and reason about such programs"}, {"Code": "CLO3", "Description": "appreciate the complexities involved in the previous two"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Weekly Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Midterm Exam", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3151 Foundations of Concurrency 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3151 Foundations of Concurrency 2021.01"}], "Handbook Information": {"Title": "COMP9154 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9154/"}}, {"Course Code": "COMP9164", "Course Name": "Concepts of Programming Languages", "Course Name - SiMs": "Concepts of Programming Lang.", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Programming language paradigms: imperative, object oriented, declarative (i.e., functional and logic). Theoretical foundations of programming languages: syntax, operatational, axiomatic and denotational semantics. Implementation aspects of central language features, such as dynamic and strong typing, polymorphism, overloading and automatic memory management. Abstracting over programming languages and architectures: byte code approach, component software.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020103 Programming", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Assessment"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assessment", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Jointly Taught", "Related Course": "COMP3161 Concepts of Programming Languages 2021.01"}], "Handbook Information": {"Title": "COMP9164 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9164/"}}, {"Course Code": "COMP9201", "Course Name": "Operating Systems", "Course Name - SiMs": "Operating Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Operating system organisation and services. Process management: scheduling, synchronisation and communication. Memory management: virtual memory, paging and segmentation. Storage management: Disk scheduling, file systems. Protection and Security. Distributed operating systems and file systems. Case studies drawn from UNIX, MS-DOS, Mach. Lab. programming assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3231 Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3231 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9283 Extended Operating Systems 2021.01"}], "Handbook Information": {"Title": "COMP9201 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9201"}}, {"Course Code": "COMP9211", "Course Name": "Computer Architecture", "Course Name - SiMs": "Computer Architecture", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Study the architecture & organisation of modern processors, and influences upon these, with emphasis on pipelined RISC machines; gain understanding of the design of the memory subsystem, I/O, and system level interconnect; become proficient in the use of tools such as VHDL and SimpleScalar for the description, simulation, and verification of architectural designs; complete a series of assignments leading to the design, implementation, validation and assessment of a RISC system. It is assumed students are familiar with combinational and sequential logic design principles and have some experience in the use of CAD tools to describe and simulate digital systems.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3211 Computer Architecture 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3211 Computer Architecture 2021.01"}], "Handbook Information": {"Title": "COMP9211 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9211"}}, {"Course Code": "COMP9222", "Course Name": "Digital Circuits and Systems", "Course Name - SiMs": "Digital Circuits and Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "This course aims to provide students with a knowledge of problem solving with digital systems (computer systems and digital circuits). The basic building blocks of combinational and sequential circuits are introduced to develop circuit solutions to problems and to understand and implement the design and operation of hardware models of digital and computer systems. HDLs will be used to describe circuits and state of the art computer aided design tools will be used to design complex systems.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "design and implement combinational and synchronous sequential logic circuits,"}, {"Code": "CLO2", "Description": "analyse various types of digital logic circuits"}, {"Code": "CLO3", "Description": "explain engineering concepts in the design of digital circuits,"}, {"Code": "CLO4", "Description": "explain the role of hardware description languages in digital circuit implementation,"}, {"Code": "CLO5", "Description": "describe simple hardware functions using a hardware description language,"}, {"Code": "CLO6", "Description": "make use of CAD tools to specify, simulate and synthesize circuit designs"}, {"Code": "CLO7", "Description": "explain he purpose of and steps involved in digital circuit implementation using Field-Programmable Gate Arrays."}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Labs", "Weighting (%)": "35"}, {"Assessment Type": "Test", "Assessment Name": "Mid-Session Quiz", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Final Theory Examination", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Practical Examination", "Weighting (%)": "25"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP2021 Digital System Structures 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP9022 Digital Systems Structures 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3222 Digital Circuits and Systems 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9284 Extended Digital Circuits & Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3222 Digital Circuits and Systems 2021.01"}], "Handbook Information": {"Title": "COMP9222 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9222"}}, {"Course Code": "COMP9242", "Course Name": "Advanced Operating Systems", "Course Name - SiMs": "Advanced Operating Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Covers operating systems design and implementation issues at an advanced level, focussing on specific issues such as performance and on current OS research areas. Topics selected from: Microkernels; user-level servers; performance; kernel implementation; device drivers; scheduling for real-time; effects and control of hardware caches; security and protection; persistent systems; security; dealing with large, sparse address spaces; experimental systems. A laboratory running a state-of-the-art microkernal system will be used to provide hands-on experience with low-level implementation of OS components.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP9242 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9242"}}, {"Course Code": "COMP9243", "Course Name": "Distributed Systems", "Course Name - SiMs": "Distributed Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "A detailed coverage of distributed systems, with a particular focus on operating systems issues: client-server paradigm, remote-procedure call as OS support for client-server; distributed shared memory, distributed memory coherency; distributed file systems; distributed process management, including load sharing and process migration; concurrency control; fault tolerance, recoverability and distributed transactions; naming; industry standards; case studies.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Explain what a distributed system is, why you would design a system as a distributed system, and what the desired properties of such systems are."}, {"Code": "CLO2", "Description": "List the principles underlying the functioning of distributed systems, describe the problems and challenges associated with these principles, and evaluate the effectiveness and shortcomings of their solutions."}, {"Code": "CLO3", "Description": "Recognise how the principles are applied in contemporary distributed systems, explain how they affect the software design, and be able to identify features and design decisions that may cause problems."}, {"Code": "CLO4", "Description": "Design a distributed system that fulfills requirements with regards to key distributed systems properties (such as scalability, transparency, etc.), be able to recognise when this is not possible, and explain why."}, {"Code": "CLO5", "Description": "Build distributed system software using both basic OS mechanisms as well as higher-level middleware and languages."}], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP9243 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9243"}}, {"Course Code": "COMP9283", "Course Name": "Extended Operating Systems", "Course Name - SiMs": "Ext Operating Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "As for COMP9201 Operating Systems but in greater depth and breadth.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020117 Operating Systems", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9201 Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3231 Operating Systems 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3231 Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3891 Extended Operating Systems 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9201 Operating Systems 2021.01"}], "Handbook Information": {"Title": "COMP9283 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9283"}}, {"Course Code": "COMP9301", "Course Name": "Cyber Security Project", "Course Name - SiMs": "Cyber Security Project", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Students will complete a small research project under the supervision of an academic member of the school and co-supervision of an industry expert as appropriate", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029901 Security Science", "Level": "", "Teaching Strategies and Rationale": "Students propose or choose a security problem, analyse it, and develop and evaluate a solution. Students are assigned a project mentor and should meet with them regularly over the course of the term to discuss progress. Students finally produce a report which outlines the security issue and describes an effective solution.", "Course Aims": "This security engineering research project course allows the student to undertake original research in security engineering with guidance from a member of academic staff. The research project is typically undertaken in the second year of your postgraduate degree or final year of undergraduate study. The course will provide students with experience in independently tackling a challenging problem in cyber security.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE", "Delivery Mode": "Fully online", "Delivery Format": "BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Graduates will acquire enquiry-based techniques and practice through the completion of a complex cyber security research-based project."}, {"Code": "CLO2", "Description": "Graduates will develop their ability to define, investigate and analyse security engineering problems and develop creative and innovative solutions to these problems."}, {"Code": "CLO3", "Description": "Graduates will develop advanced theory-based knowledge and techniques of cyber security research"}, {"Code": "CLO4", "Description": "Graduates will be able to proficiently apply security engineering methods to complex cyber security problem solving."}], "Assessments": [{"Assessment Type": "Report", "Assessment Name": "Final Report", "Weighting (%)": "80"}, {"Assessment Type": "Project", "Assessment Name": "Progress Reports", "Weighting (%)": "20"}], "Relationships": [], "Handbook Information": {"Title": "COMP9301 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9301/"}}, {"Course Code": "COMP9302", "Course Name": "Cyber Security Project B", "Course Name - SiMs": "Cyber Security Project B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "12", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Students will complete a large research project under the supervision of an academic member of the school and co-supervision of an industry expert as appropriate", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029901 Security Science", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "Provide students with experience in independently tackling a challenging problem in cyber security", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE", "Delivery Mode": "Fully online", "Delivery Format": "BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "synthesises existing knowledge"}, {"Code": "CLO2", "Description": "analyses security scenarios rigorously and documents outcomes in a scientific and professional manner"}, {"Code": "CLO3", "Description": "communicates problem statement and findings in a clear and professional manner"}, {"Code": "CLO4", "Description": "investigates and persists solving open ended problems to meet client requirements"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Progress Reports", "Weighting (%)": "20"}, {"Assessment Type": "Report", "Assessment Name": "Final Report", "Weighting (%)": "80"}], "Relationships": [], "Handbook Information": {"Title": "COMP9302 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9302/"}}, {"Course Code": "COMP9311", "Course Name": "Database Systems", "Course Name - SiMs": "Database Systems", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "A first course on database management systems. Data modelling; principles of database design; data manipulation languages; database application techniques; introduction to DBMS internals; introduction to advanced databases. Lab: design and implementation of a database application using SQL and stored procedures.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "develop accurate, non-redundant data models"}, {"Code": "CLO2", "Description": "realise data models as SQL relational database schemas"}, {"Code": "CLO3", "Description": "formulate queries via the full range of SQL constructs"}, {"Code": "CLO4", "Description": "implement stored procedures and triggers"}, {"Code": "CLO5", "Description": "analyse and improve redundancy in relational models"}, {"Code": "CLO6", "Description": "have a high-level understanding of DBMS internals"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Ass1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Ass2", "Weighting (%)": "25"}, {"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Written exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "INFS5992 Data Management 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3311 Database Systems 2021.01"}], "Handbook Information": {"Title": "COMP9311 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9311"}}, {"Course Code": "COMP9312", "Course Name": "Data Analytics for Graphs", "Course Name - SiMs": "Data Analytics for Graphs", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course aims to systematically introduce fundamental modern techniques related to graph analytics including graph representation, graph traversal, reachability, community analysis, spatial-temporal graphs, graph embedding.\nNote: Students are assumed to have a solid background in programming and database systems. Completion of an algorithms course is also highly desirable.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "", "Teaching Strategies and Rationale": "The course involves lectures and practical work. Lectures aim to summarise the concepts and present case studies. The practical work takes the form of three projects where students implement and analyse various graph process techniques.", "Course Aims": "This course aims to introduce students to a range of graph processing techniques, from fundamental to state-of-the-art, and show how they can be employed in solving real-world problems. By the end of the course, students should appreciate the history of graph data analytics, current techniques, and future challenges", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Store and represent graph data using appropriate data structures"}, {"Code": "CLO2", "Description": "Implement fundamental and advanced graph traversal techniques"}, {"Code": "CLO3", "Description": "Implement pattern matching algorithms on graphs"}, {"Code": "CLO4", "Description": "Analyze cohesive subgraph models and their representative computation algorithms"}, {"Code": "CLO5", "Description": "Analyze and implement classic graph clustering and classification techniques"}, {"Code": "CLO6", "Description": "Implement techniques for graph embedding, graph neural networks and link prediction"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 3", "Weighting (%)": "15"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "55"}], "Relationships": [], "Handbook Information": {"Title": "COMP9312 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9312"}}, {"Course Code": "COMP9313", "Course Name": "Big Data Management", "Course Name - SiMs": "Big Data Management", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course introduces the core concepts and technologies involved in managing Big Data. Topics include: characteristics of Big Bata and Big Data analysis, storage systems (e.g. HDFS, S3), techniques for manipulating Big Data (e.g. MapReduce, streaming, compression), programming languages (e.g. Spark, PigLatin), query languages (e.g. Jaql, Hive), database systems (e.g. noSQL systems, HBase), and typical applications (e.g. recommender systems, dimensionality reduction, text analysis).", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "", "Teaching Strategies and Rationale": "The course involves lectures and practical work. Lectures aim to summarise the concepts and present case studies. The \"lab\" exercises aim to reinforce the topics covered in lectures (without assessment), while the quizzes aim to do the same (but are assessed)", "Course Aims": "This course aims to introduce students to the concepts behind Big Data, the core technologies used in managing large-scale data sets, and a range of technologies for developing solutions to large-scale data analytics problems.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "elaborate the important characteristics of Big Data"}, {"Code": "CLO2", "Description": "develop an appropriate storage structure for a Big Data repository"}, {"Code": "CLO3", "Description": "utilise the map/reduce paradigm to manipulate Big Data"}, {"Code": "CLO4", "Description": "use a high-level query language to manipulate Big Data"}, {"Code": "CLO5", "Description": "develop efficient solutions for analytical problems involving Big Data"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Map/Reduce Programming", "Weighting (%)": "15"}, {"Assessment Type": "Project", "Assessment Name": "Exploring Big Data", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "On-line Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}], "Relationships": [], "Handbook Information": {"Title": "COMP9313 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9313"}}, {"Course Code": "COMP9315", "Course Name": "Database Systems Implementation", "Course Name - SiMs": "Database Systems Implementat'n", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Detailed examination of techniques used in the implementation of relational, object-oriented and distributed database systems. Topics are drawn from: query optimisation, transaction management, advanced file access methods, database performance tuning.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Be able to describe and reason about the internal architecture of large-scale data management systems (primarily relational DBMSs)"}, {"Code": "CLO2", "Description": "Be able to analyse a variety of data-structures and algorithms for large-scale data manipulation, and choose appropriate data structures for given scenarios"}, {"Code": "CLO3", "Description": "Be able to analyse and tune the performance of data-intensive systems"}, {"Code": "CLO4", "Description": "Be able to explain the techniques for implementing transactional behaviour and reliable storage"}, {"Code": "CLO5", "Description": "Be able to install and administer the PostgreSQL database management system"}, {"Code": "CLO6", "Description": "Be able to add new data types to PostgreSQL"}, {"Code": "CLO7", "Description": "Be able to implement and test data structures for manipulating large data sets"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Assignments", "Weighting (%)": "30"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}], "Relationships": [], "Handbook Information": {"Title": "COMP9315 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9315"}}, {"Course Code": "COMP9318", "Course Name": "Data Warehousing and Data Mining", "Course Name - SiMs": "Data Warehousing & Data Mining", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Data Warehouse: (a) Data Model for Data Warehouses. (b) Implementing Data Warehouses: data extraction, cleansing, transformation and loading, data cube computation, materialized view selection, OLAP query processing. Data Mining: (a) Fundamentals: data mining process and system architecture, relationship with data warehouse and OLAP systems, data pre-processing. (b) Mining Techniques and Application: association rules, mining spatial databases, mining multimedia databases, web mining, mining sequence and time-series data, text mining, etc. The lecture materials will be complemented by projects /assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020303 Database Management", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand the whole process of data mining and knowledge discovery from databases"}, {"Code": "CLO2", "Description": "Understand the data models and query processing mechanisms used in Data Warehouses"}, {"Code": "CLO3", "Description": "Understand various data mining techniques and their variants"}, {"Code": "CLO4", "Description": "Develop solutions for real problems using existing data warehousing and data mining technologies"}, {"Code": "CLO5", "Description": "Appreciate the past, present and future of data warehousing and data mining technology"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "Project 1", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP9318 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9318"}}, {"Course Code": "COMP9319", "Course Name": "Web Data Compression and Search", "Course Name - SiMs": "Web Data Compression & Search", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Data Compression: Adaptive Coding, Information Theory; Text Compression (ZIP, GZIP, BZIP, etc); Burrows-Wheeler Transform and Backward Search; XML Compression\nSearch: Indexing; Pattern Matching and Regular Expression Search; Distributed Querying; Fast Index Construction\nThe lecture materials will be complemented by projects and assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "As data and storage continues to grow, methods and solutions for data search and compression remain crucial aspects of modern computing. While text and image compression are classical and mature fields in computer science, search and compression of XML, the lingua franca of the web poses new challenges and requires new solutions. \nThis course gives an introduction to the basics of (classical) text compression and search (that  is: models, algorithms, implementations, and applications), as well as new compression and search algorithms for web and XML data.\nThe main aim is to explain the differences between\n   * coding theory \n   * compression\n   * indexing, and\n   * efficient search.\nWe will study the classical algorithms in these topics (under the aspect of efficient search).  How can indexes be used to speed up search?  How can such indexes be compressed, while retaining search speed? How to design a new index for a particular type of search? What are lower limits of compressibility, and search time? Can we use well-known compression schemes, and develop search algorithms that operate directly on the compressed output? What are the new challenges in compression of web data and XML in particular? How can a tree be compressed? What are succinct data structures, and how can they be used for XML?", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "have a good understanding of the fundamentals of text compression"}, {"Code": "CLO2", "Description": "be introduced to advanced data compression techniques such as those based on Burrows Wheeler Transform"}, {"Code": "CLO3", "Description": "have programming experience in Web data compression and optimization"}, {"Code": "CLO4", "Description": "have a deep understanding of XML and selected XML processing and optimization techniques"}, {"Code": "CLO5", "Description": "understand the advantages and disadvantages of data compression for Web search"}, {"Code": "CLO6", "Description": "have a basic understanding of XML distributed query processing"}, {"Code": "CLO7", "Description": "appreciate the past, present and future of data compression and Web data optimization"}], "Assessments": [{"Assessment Type": "Project", "Assessment Name": "Programming Assignments", "Weighting (%)": "50"}, {"Assessment Type": "Examination", "Assessment Name": "Final Examination", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP9319 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9319"}}, {"Course Code": "COMP9321", "Course Name": "Data Services Engineering", "Course Name - SiMs": "Data Services Engineering", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course aims to introduce the student to core concepts and practical skills for engineering the data in Web-service-oriented data-driven applications. Specifically, the course aims to expose students to basic infrastructure for building data services on the Web, including techniques to access and ingest data in internal/external sources, develop software services to curate (e.g. extract, transform, correct, aggregate the data), develop services to apply various analytics and develop services to visualize the data to communicate effectively using data. The course uses the Python programming language as the practical basis for its modules. However, the concepts taught are universal and can be applied to any other web development language/framework. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "The course is designed to encourage the students to learn by doing. We provide timely feedback for learning via small, step-by-step weekly practical activities and tests that gradually build up knowledge and practical skills.\nThrough face-to-face lectures and online videos, we introduce concepts and theory with practical examples. In lab work, we introduce the technologies and techniques for the assignments. The assignments allow students to solve significant problems.", "Course Aims": "Software engineering has advanced rapidly in recent years. The knowledge-, service-, and cloud-based economy in parallel with the continuous improvement in connectivity, storage and data processing capabilities allow access to a data deluge from sensors, social-media, news, user-generated, government and private data sources. Accordingly, in a modern data-oriented landscape, data-driven applications may need to deal with a collection of datasets - from relational to NoSQL - that holds a vast amount of data gathered from various private/open data islands. Therefore, well-engineered service-oriented functionalities are critical for ingesting, organizing and querying the growing volume of data in data-driven application.\nThis course aims to introduce the student to core concepts and practical skills for engineering the data in service-oriented data-driven applications. Specifically, the course aims to answer these questions:\nHow to develop services to access and ingest data in internal/external sources of the data?\nHow to develop services to use Databases (from Relational to NoSQL) as a Service for persisting user information?\nHow to develop services to Curate (e.g. Extract, Transform, Correct, Aggregate, and Merge/Split) the data?\nHow to develop services to apply analytics (e.g. by leveraging Machine Learning and Natural Language Processing techniques) to the curated data?\nHow to develop services to visualize the data to communicate effectively with data.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Describe the main components of a data-oriented Web-based application"}, {"Code": "CLO2", "Description": "Read and ingest data from a variety of common sources"}, {"Code": "CLO3", "Description": "Apply techniques Extract, Transform, Correct, Aggregate, and Merge/Split to prepare and publish data"}, {"Code": "CLO4", "Description": "Identify and apply appropriate analytics and visualization techniques on prepared data"}, {"Code": "CLO5", "Description": "Design and develop a non-trivial web based data services application from scratch"}, {"Code": "CLO6", "Description": "Identify common security threats to a Web application"}, {"Code": "CLO7", "Description": "Evaluate the performance of a web based data services and identify bottlenecks"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assigment 2", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}, {"Assessment Type": "Test", "Assessment Name": "In-class Quizzes", "Weighting (%)": "10"}], "Relationships": [], "Handbook Information": {"Title": "COMP9321 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9321"}}, {"Course Code": "COMP9322", "Course Name": "Software Service Design and Engineering", "Course Name - SiMs": "Software Service Design & Eng", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "The notion of \u201csoftware as a service\u201d (SaaS) plays a critical role in building distributed, scalable application platforms. This course arms students with the knowledge and expertise to design and engineer services using modern Web technologies. Based on Service Oriented Architecture (SOA) principles, students will be exposed to various design and implementation methodologies, including microservices and their associated design patterns, and API design and management. In addition, this course will strengthen students\u2019 data modeling expertise, covering topics on semantic modelling of both simple and complex structures, and its usage in business analysis. The course will also describe the technical standards and technologies that support semantic data modelling. After completing this course, students will be able to (i) describe different architectural design approaches and their role in engineering software. (ii) apply Web service composition techniques in a concrete setting, (iii) be competent in designing, managing, documenting, testing and securing APIs, (iv) understand techniques for semantic modelling of simple and complex structures, as well as their associated technical standards and technologies.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "", "Teaching Strategies and Rationale": "The course is designed to encourage the students to learn by doing. We provide timely feedback for learning via small, step-by-step weekly practical activities and tests that gradually build up knowledge and practical skills.\nThrough face-to-face lectures and online videos, we introduce concepts and theory with practical examples. In lab work, we introduce the technologies and techniques for the assignments. The assignments allow students to solve significant problems.", "Course Aims": "Students will appreciate the importance of the Service Oriented Architecture (SOA) as a way to design and implement interoperable, scalable, distributed enterprise applications. In particular, the course expses the students to the notion of software-as-a-service(SaaS), including the microservice variants and their associated design patterns, service composition, and the design, implementation and management methodology of Web-based APIs. In addition, this course will strengthen students\u2019 data modeling expertise, covering topics on semantic modelling of both simple and complex structures, and its usage in business analysis. The course will also describe the technical standards and technologies that support semantic data modelling.\nAfter completing this course, students will be able to:\nDescribe different architectural design approaches and their role in engineering software.\nApply Web service composition techniques in a concrete setting.\nBe competent in designing, managing, documenting, testing and securing APIs.\nUnderstand techniques for semantic modelling of simple and complex structures, as well as their associated technical standards and technologies.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Describe different architectural design approaches and their role in engineering software."}, {"Code": "CLO2", "Description": "Apply modelling of services in different settings"}, {"Code": "CLO3", "Description": "Be competent in designing, managing and documenting APIs."}, {"Code": "CLO4", "Description": "Understand techniques for semantic information modelling of simple and complex structures,"}, {"Code": "as w", "Description": "ll as their associated technical standards and technologies."}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "30"}, {"Assessment Type": "Lab", "Assessment Name": "work Practical Labs", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Written Final Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP9322 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9322"}}, {"Course Code": "COMP9323", "Course Name": "Software as a Service Project", "Course Name - SiMs": "e-Enterprise Project", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course allows students to explore principles, techniques, architectures, and enabling technologies for the development of the different components and layers of complex SaaS systems. In particular, it discusses the processes related to (1) building a large enterprise system in collaboration with other project members, (2) developing software in a culture of participation, (3) developing software using agile software engineering methodologies, (4) integrating a number of separate components to build an integrated system, and (5) developing appropriate testing strategies and methodologies for given projects.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020399 Information Systems not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "This course uses primarily project-based learning, after a small number of introductory lectures. Over the semester, students work in groups to produce a viable software product. During the course of the project they meet regularly with a group mentor. There are several presentations over the course of the semester, including a final presentation to the entire class. Students are expected to document all phases of the project, which gives them an opportunity to reflect on aspects such as teamwork, software development strategies, approaches to testing. Each student will be asked to participate in peer reviews for the purpose of learning assessment processes in project-based learning and teaching.", "Course Aims": "This course aims at allowing students to pursue a group-based and practical project related to service oriented software engineering in an identified area of interest such as education, social media, crowd-sourcing, data analytics. Student groups will be supervised by a mentor throughout the design, implementation, testing and documentation stages of the project.  The project demonstration will be exhibited to all members of the class at the end of the session.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Learn the process of building a large enterprise system in collaboration with other project members"}, {"Code": "CLO2", "Description": "Learn the process of developing software using agile software engineering methodologies"}, {"Code": "CLO3", "Description": "Understand peer software artifacts review"}, {"Code": "CLO4", "Description": "Integrate a number of separate components to build an integrated system"}, {"Code": "CLO5", "Description": "Develop appropriate testing strategy and methodologies for given projects"}, {"Code": "CLO6", "Description": "Develop software documentation for various stakeholders"}], "Assessments": [{"Assessment Type": "Other", "Assessment Name": "Project Phase One: Project Scoping and Requirements", "Weighting (%)": "25"}, {"Assessment Type": "Other", "Assessment Name": "Project Phase Two: Software Prototype (Version 1) (Presentation, Data Model, Software Architecture, and Peer Review)", "Weighting (%)": "25"}, {"Assessment Type": "Other", "Assessment Name": "Project Phase Three: Final Software Prototype (Demo, Project Artifacts, and Documentation)", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP9323 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9323"}}, {"Course Code": "COMP9331", "Course Name": "Computer Networks and Applications", "Course Name - SiMs": "Computer Networks&Applications", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Networking technology overview. Protocol design and validation using the finite state automata in conjunction with time-lines. Overview of the IEEE802 network data link protocol standards. Addressing at the data link and network layers. Network layer services. Introduction to routing algorithms such as Distance Vector and Link State. Congestion control mechanisms. Internetworking issues in connecting networks. The Internet Protocol suite overview. The Internet protocols IPv4 and IPv6. Address resolution using ARP and RARP. Transport layer: issues, transport protocols TCP and UDP. Application level protocols such as: File. Transfer Protocol (FTP), Domain Name System (DNS) and Simple Mail Transfer Protocol (SMTP). Introduction to fundamental network security concepts, 802.11 wireless networks and peer to peer networks. There is a substantial network programming component in the assessable material.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Have a working knowledge of computer networks, and will be able to demonstrate their knowledge both by describing aspects of the topics and by solving problems related to the topics"}, {"Code": "CLO2", "Description": "Have a solid understanding of the current architecture of the Internet and the entities involved in its operations"}, {"Code": "CLO3", "Description": "Be able to identify soundness or potential flaws in proposed protocols"}, {"Code": "CLO4", "Description": "Be equipped with the necessary skills to design networked applications and protocols"}, {"Code": "CLO5", "Description": "Implement and write protocols and applications in C, Java or Python"}, {"Code": "CLO6", "Description": "Analyse and evaluate the performance of computer networks"}, {"Code": "CLO7", "Description": "Be able to capture and analyse network traffic"}, {"Code": "CLO8", "Description": "Be able to understand and explain security and ethical issues in computer networking"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Lab", "Weighting (%)": "20"}, {"Assessment Type": "Test", "Assessment Name": "Mid term test", "Weighting (%)": "20"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3331 Computer Networks and Applications 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9833 Extended Computer Networks and Applications 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3331 Computer Networks and Applications 2021.01"}], "Handbook Information": {"Title": "COMP9331 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9331"}}, {"Course Code": "COMP9332", "Course Name": "Network Routing and Switching", "Course Name - SiMs": "Network Routing and Switching", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course will focus on the routing and switching architectures, algorithms and protocols for packet switching networks, both connectionless and connection oriented networks (such as IP and ATM networks). Advanced Internet addressing : CIDR, VPN, NAT. In depth discussion of interior and exterior routing protocols, such BGP, OSPF. IP over ATM solutions : such as LANE, Classical IP over ATM. IP switching and MPLS. Mobile IP. Internet Multicasting. Overview of emerging switching and routing technologies, such as optical routing and QoS routing. There is a substantial network programming component in the assessable material, for which C prgramming knowledge is assumed.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Gain good understanding of the role of routing and switching in modern communication networks"}, {"Code": "CLO2", "Description": "Master routing architectures, protocols, and algorithms with an emphasis on fundamental concepts and principles;"}, {"Code": "CLO3", "Description": "Learn how to configure, tune, and analyse the performance of popular routing protocols"}, {"Code": "CLO4", "Description": "Develop abilities to innovate routing solutions for new networking requirements"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Mid-Session Test", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "Laboratory Exam", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "Assignment", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [], "Handbook Information": {"Title": "COMP9332 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9332"}}, {"Course Code": "COMP9334", "Course Name": "Capacity Planning of Computer Systems and Networks", "Course Name - SiMs": "Systems Capacity Planning", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Techniques for performance evaluation of distributed systems. These techniques will then be applied to designing systems to have good performance, and to the analysis of future workloads and the system changes required to cope with them.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020300 Information Systems", "Field of Education (Detailed)": "020305 Systems Analysis and Design", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "ONLINE-ST", "Delivery Mode": "Fully online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understanding of capacity planning principles"}, {"Code": "CLO2", "Description": "Ability to develop models of practical applications and evaluate their performance by rigorous analytical means and by programming computer simulations"}, {"Code": "CLO3", "Description": "Problem-solving abilities, characterized by flexibility of approach"}, {"Code": "CLO4", "Description": "Analytical, critical and creative thinking, with an aptitude for continued self-directed learning"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "15"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [], "Handbook Information": {"Title": "COMP9334 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9334"}}, {"Course Code": "COMP9336", "Course Name": "Mobile Data Networking", "Course Name - SiMs": "Mobile Data Networking", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "This course will examine how mobility affects networks, systems, and applications. It will teach advanced concepts and protocols for managing mobility in TCP/IP networks, improving spectrum and energy efficiency of mobile networking, realizing more direct form of device-to-device communication, enhancing the quality of experience of mobile video, and achieving self-powered wireless communication. Learning emerging device functionalities and features will be part of this course, which requires some basic understanding of mobile device programming, such as Android and Java.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "To master the fundamental theories and concepts of wireless networking"}, {"Code": "CLO2", "Description": "To analyse the key algorithms, protocols, and methods used by mobile networks"}, {"Code": "CLO3", "Description": "To gain insight to the frontier technologies for mobile networking"}, {"Code": "CLO4", "Description": "To experiment with the advanced capabilities of sensor-rich mobile devices"}], "Assessments": [{"Assessment Type": "Test", "Assessment Name": "Mid-term Test", "Weighting (%)": "20"}, {"Assessment Type": "Lab", "Assessment Name": "work laboratory experiment demonstrations", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Mobile Network Measurement", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "50"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP4336 Mobile Data Networking 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP4336 Mobile Data Networking 2021.01"}], "Handbook Information": {"Title": "COMP9336 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9336"}}, {"Course Code": "COMP9337", "Course Name": "Securing Fixed and Wireless Networks", "Course Name - SiMs": "Securing Fixed & Wireless Netw", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "With exponential growth of the Internet, security of a network has become increasingly challenging. This subject will explore the security vulnerabilities in both fixed and wireless networks and cover the fundamental concepts and advanced issues with an emphasis on the Internet architecture and protocols. \nThe following key concepts will be covered: Wireless Communications and Security overview, Review of Cryptographic techniques, 802.11 Technologies and legacy 802.11 Security: lessons learnt, Encryption Ciphers and Methods in Wireless Networks, Wireless Security Risks, Wireless Security Auditing and Pen Test Introduction,  IPSec and IP layer security,  PKI/X.509, Transport Layer Security/DTLS,   Intrusion Detection and Protection Systems, Network Firewalls, Secure Neighbor Discovery, Routing and Forwarding Security,  Authentication and Key Management in Wireless Networks/Sensor Networks,   Broadcast Security and Secure Code Dissemination,  Network Privacy and Anonymity, Security and Privacy in Location Services, Smart Grid and IoT security.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP4337 Securing Fixed and Wireless Networks 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP4337 Securing Fixed and Wireless Networks 2021.01"}], "Handbook Information": {"Title": "COMP9337 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9337"}}, {"Course Code": "COMP9414", "Course Name": "Artificial Intelligence", "Course Name - SiMs": "Artificial Intelligence", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Overview of Artificial Intelligence. Topics include: the representation of knowledge, search techniques, problem solving, machine learning, expert systems, natural language understanding, computer vision and an Artificial Intelligence programming language (Prolog or LISP). Students may be required to submit simple Art ificial Intelligence programs, or essays on an aspect of A.I, for assessment, in areas such as robotics, computer vision, natural language processing, and machine learning.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) BLENDED-IN Blended in-person / online Intensive", "Learning Outcomes": [{"Code": "CLO1", "Description": "Gain in-depth understanding of a variety of fundamental AI techniques"}, {"Code": "CLO2", "Description": "Understand the foundational issues of AI drawing on philosophical enquiry"}, {"Code": "CLO3", "Description": "Be able to choose appropriate AI techniques to solve given problems"}, {"Code": "CLO4", "Description": "Be able to implement programs based on standard AI algorithms"}, {"Code": "CLO5", "Description": "Acquire experience in utlizing AI Python tookits in realistic contexts"}, {"Code": "CLO6", "Description": "Be aware of a variety of application areas of current AI technology"}, {"Code": "CLO7", "Description": "Appreciate the dangers of unthinkingly applying AI in business and industry"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "15"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "25"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9814 Extended Artificial Intelligence 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9814 Extended Artificial Intelligence 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3411 Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3411 Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9814 Extended Artificial Intelligence 2021.01"}], "Handbook Information": {"Title": "COMP9414 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9414"}}, {"Course Code": "COMP9415", "Course Name": "Computer Graphics", "Course Name - SiMs": "Computer Graphics", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Graphics hardware: scan conversion of lines and polygons. 2D transformations: windowing, clipping, viewports. User interfaces. 3D transformations: perspective transformation, 3D clipping, hidden surface removal, lighting and texture maps. Hierarchical modelling of objects, modelling curves and surfaces with splines and fractals. Graphics standards. Lab: programming assignments.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020115 Computer Graphics", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand modeling in computer graphics, including the mathematical representation and computer implementations of lines, curves, surfaces and transformations"}, {"Code": "CLO2", "Description": "Understand the rendering process, including the mathematics of projection, hidden surface removal, local and global illumination techniques and the computer implementation of this in the graphics pipeline"}, {"Code": "CLO3", "Description": "Understand how modeling and rendering work together in graphics hardware and software"}, {"Code": "CLO4", "Description": "Be able to use OpenGL to write interactive computer programs to manipulate and render complex 3D scenes"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment 1", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment 2", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3421 Computer Graphics 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3421 Computer Graphics 2021.01"}], "Handbook Information": {"Title": "COMP9415 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9415"}}, {"Course Code": "COMP9417", "Course Name": "Machine Learning and Data Mining", "Course Name - SiMs": "Machine Learning & Data Mining", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Machine learning (ML) is the algorithmic approach to learning from data.  This course provides an introduction to core ideas and techniques in ML, covering theoretical foundations, algorithms, and practical methodology.  Algorithms for supervised and unsupervised learning are covered, including regression, classification, neural networks, tree learning, kernel methods, clustering, dimensionality reduction, ensemble methods, and large-scale ML. Students will be given hands-on experience on applying ML algorithms to real problems and datasets.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Set up a well-defined learning problem for a given task, and select and define a representation for the input data and output model for a machine learning algorithm"}, {"Code": "CLO2", "Description": "Compare different algorithms according to the properties of their inputs and outputs, and the computational and evaluation methods used"}, {"Code": "CLO3", "Description": "Develop and describe algorithms to solve learning problems in terms of their inputs and outputs, and the computational and evaluation methods used"}, {"Code": "CLO4", "Description": "Express key concepts from the foundations of computational and statistical learning theory, and apply these to demonstrate knowledge of the capabilities and limitations of machine learning systems"}, {"Code": "CLO5", "Description": "Use, extend or invent algorithms in applications to real-world data sets and collect results to enable evaluation and comparison of performance"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "EXAM1", "Weighting (%)": "5"}, {"Assessment Type": "Examination", "Assessment Name": "EXAM2", "Weighting (%)": "5"}, {"Assessment Type": "Assignment", "Assessment Name": "ASST", "Weighting (%)": "30"}, {"Assessment Type": "Examination", "Assessment Name": "EXAM3", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "MATH5836 Data Mining and its Business Applications 2021.02"}, {"Relationship Type": "Exclusions", "Related Course": "ZZSC5836 Data Mining and Machine Learning 2021.02"}], "Handbook Information": {"Title": "COMP9417 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9417"}}, {"Course Code": "COMP9418", "Course Name": "Advanced Topics in Statistical Machine Learning", "Course Name - SiMs": "Advanced Machine Learning", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course provides an in-depth study of statistical machine learning approaches. The focus will be on methods for learning and inference in structured probabilistic models, with a healthy balance of theory and practice. It is aimed at postgraduate students and advanced undergraduates who are willing to go beyond basic understanding of machine learning.\nThe course provides fundamental support for those willing to intensify their knowledge in the area of big data analytics. It will cover topics on exact and approximate inference in probabilistic graphical models, learning in structured latent variable models, and posterior inference in non-parametric models based on Gaussian processes. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "", "Teaching Strategies and Rationale": "The course involves lectures and practical work. Lectures aim to summarize the concepts and present case studies. The tutorial / lab exercises aim to reinforce the topics covered in lectures but they are not assessed. The quizzes and assignments aim to do the same but are assessed. ", "Course Aims": "This course presents an in-depth study of statistical machine learning approaches. It aims to provide the student with a solid understanding of methods for learning and inference in structured probabilistic models, with a healthy balance of theory and practice. \n ", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Derive statistical independence assumptions from a given graphical representation of a probabilistic model"}, {"Code": "CLO2", "Description": "Understand and implement exact inference methods in graphical models including variable elimination and the junction tree algorithm"}, {"Code": "CLO3", "Description": "Understand and implement approximate inference algorithms in graphical models, including sampling and loopy belief propagation."}, {"Code": "CLO4", "Description": "Derive and implement maximum likelihood learning approaches to latent variable probabilistic models "}, {"Code": "CLO5", "Description": "Understand and apply basic methods for structured prediction"}], "Assessments": [{"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "60"}, {"Assessment Type": "Assignment", "Assessment Name": "Inference in Graphical Models", "Weighting (%)": "15"}, {"Assessment Type": "Test", "Assessment Name": "Quizzes", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Programming assignment", "Weighting (%)": "15"}], "Relationships": [], "Handbook Information": {"Title": "COMP9418 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9418"}}, {"Course Code": "COMP9434", "Course Name": "Robotic Software Architecture", "Course Name - SiMs": "Robotic Software Architecture", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "An introduction to Intelligent agent design. Picking actions using planning, learning or engineered control. Both practical and theoretical components. Practical component: Re-implement parts of a real agent architecture on a robot. Assignment based. Emphasis on engineering a working system. Theoretical component: Introduction to a variety of research agent architectures including classical planning and reinforcement learning. Lecture and lab based.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Experience with the details of one robot architecture"}, {"Code": "CLO2", "Description": "An overview of a range of other architectures and decision making systems"}, {"Code": "CLO3", "Description": "An understanding of the practicalities of programming physical robots as opposed to purely software systems"}, {"Code": "CLO4", "Description": "An understanding of a robot as a complete system, as well as its component parts"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "20"}, {"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "40"}, {"Assessment Type": "Report", "Assessment Name": "Final Report", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3431 Robotic Software Architecture 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3431 Robotic Software Architecture 2021.01"}], "Handbook Information": {"Title": "COMP9434 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9434/"}}, {"Course Code": "COMP9444", "Course Name": "Neural Networks and Deep Learning", "Course Name - SiMs": "Neural Networks, Deep Learning", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Topics chosen from: perceptrons, feedforward neural networks, backpropagation, Hopfield and Kohonen networks, restricted Boltzmann machine and autoencoders, deep convolutional networks for image processing; geometric and complexity analysis of trained neural networks; recurrent networks, language processing, semantic analysis, long short term memory; designing successful applications of neural networks; recent developments in neural networks and deep learning.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Understand aspects of the social, intellectual, and neurobiological context of neural networks research"}, {"Code": "CLO2", "Description": "Have an understanding of a variety of neural networks techniques, including: error backpropagation learning, support vector machines, committee machines, recurrent networks, tensor product networks, self-organising maps, Hopfield networks, Deep learning networks"}, {"Code": "CLO3", "Description": "Be able to analyse a problem for NN solution in terms of these methods"}, {"Code": "CLO4", "Description": "Have an awareness of the computational theory underlying NNs"}, {"Code": "CLO5", "Description": "Have a working knowledge of a typical neural network simulation package: tlearn, and be able to use it to perform a range of computational tasks"}, {"Code": "CLO6", "Description": "Have experience in programming NN applications from scratch"}, {"Code": "CLO7", "Description": "Exposure to research techniques in neural networks and cognitive science: some topics will be based on research papers and monographs, to which references will be given in the course notes"}], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "ZZEN9444 Neural Networks, Deep Learning 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9844 Extended Neural Networks and Deep Learning 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9844 Extended Neural Networks and Deep Learning 2021.01"}], "Handbook Information": {"Title": "COMP9444 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9444"}}, {"Course Code": "COMP9447", "Course Name": "Security Engineering Workshop", "Course Name - SiMs": "Security Engineering Workshop", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Applied workshop in computer security and cybercrime: attack, defense, auditing.The course will consist of a weekly seminar followed by a three hour per week workshop and lab session on the seminar topic. Topics are drawn from data sniffing, firewalls and attacks on firewalls, root-kits, exploits, denial of service attacks, intrusion detection systems, honeypots, malware, digital rights management, cryptanalysis, cross site scripting attacks, code injection attacks, threats and countermeasures, penetration testing, and current topics in security.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029901 Security Science", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-IN", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Intensive BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "COMP9447 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9447"}}, {"Course Code": "COMP9491", "Course Name": "Applied Artificial Intelligence", "Course Name - SiMs": "Applied AI", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "This course presents some advanced topics in various aspects of artificial intelligence such as computer vision, speech and language processing, deep learning, and knowledge representation and reasoning. The course aims to integrate these various aspects of AI and present case studies where such integration of different methodologies delivers interesting applications. Project development is the major component of this course, to develop a solution to a practical or industry-based problem that requires an integration of more than one type of AI techniques ranging from symbolic AI (e.g. knowledge representation and reasoning) to deep learning, with example applications in computer vision, speech and language processing, etc. Assessment is based on group project development. ", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "", "Teaching Strategies and Rationale": "The course involves lectures and project development. Lectures aim to present the concepts and case studies. The project consultations aim to provide constructive feedback and help the students with their project development. ", "Course Aims": "This course aims to introduce students to the advanced concepts in various application domains of artificial intelligence, and focus on selected topics such as computer vision, language processing, and knowledge representation and reasoning. This course also gives the students an opportunity to develop a solution to a practical or industry-based problem that requires method developments by integrating these various aspects of AI. ", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Analyse a complex practical problem and develop a solution that exploits and integrates the advantages of several advanced AI techniques (e.g., computer vision, language processing, and knowledge representation and reasoning)."}, {"Code": "CLO2", "Description": "Develop an implementation of the solution."}, {"Code": "CLO3", "Description": "Analyse and evaluate the solution quantitatively and qualitatively providing a clear understanding of how the solution progresses the current state-of-the-art."}, {"Code": "CLO4", "Description": "Explain the problem, solution and implementation through presentations and reports."}], "Assessments": [{"Assessment Type": "Report", "Assessment Name": "Project proposal", "Weighting (%)": "10"}, {"Assessment Type": "Presentation", "Assessment Name": "Mid-term update", "Weighting (%)": "120"}, {"Assessment Type": "Presentation", "Assessment Name": "Project demo", "Weighting (%)": "230"}, {"Assessment Type": "Report", "Assessment Name": "Project report", "Weighting (%)": "640"}], "Relationships": [], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9511", "Course Name": "Human Computer Interaction", "Course Name - SiMs": "Human Computer Interaction", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Provides an introduction to user-system interactions, both analysis and design. The approach is cognitive, focusing on matching user goals with computer technologies. Topics: the human information processing system, models of interaction, strategies for and process of design, and evaluation. Project work is emphasised.", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-IN", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Intensive BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3511 Human Computer Interaction 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3511 Human Computer Interaction 2021.01"}], "Handbook Information": {"Title": "COMP9511 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9511"}}, {"Course Code": "COMP9517", "Course Name": "Computer Vision", "Course Name - SiMs": "Computer Vision", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "Cameras and Radiometry, local shading models, Colour Vision perception, representation, modelling, linear filters for smoothing, edge detection using concvolution, fourier transform, scale and image pyramids, texture, segmentation by clustering, model fitting and probabilistic methods, tracking and Kalman filters, model-based vision, template matching using classifiers, recognition by relations, applications in robotics, medical imaging, satellite image analysis.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020115 Computer Graphics", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Know the foundations of scientific, statistical and engineering approaches to computer vision"}, {"Code": "CLO2", "Description": "Learn to implement and test some computer vision algorithms"}, {"Code": "CLO3", "Description": "Learn to appreciate the building and integration of large vision applications"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Assignment", "Weighting (%)": "10"}, {"Assessment Type": "Project", "Assessment Name": "Project", "Weighting (%)": "45"}, {"Assessment Type": "Lab", "Assessment Name": "work Lab tasks", "Weighting (%)": "5"}, {"Assessment Type": "Examination", "Assessment Name": "Final exam", "Weighting (%)": "40"}], "Relationships": [], "Handbook Information": {"Title": "COMP9517 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9517"}}, {"Course Code": "COMP9801", "Course Name": "Extended Design & Analysis of Algorithms", "Course Name - SiMs": "Ext Design&Analysis of Algo", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "As for COMP9101 but in greater depth and breadth.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020109 Algorithms", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "Apply standard design techniques to solve new algorithmic problems"}, {"Code": "CLO2", "Description": "Evaluate the efficiency of algorithms and justify their correctness"}, {"Code": "CLO3", "Description": "Communicate algorithmic ideas at different abstraction levels"}, {"Code": "CLO4", "Description": "Integrate modeling skills and algorithmic knowledge for problem solving"}, {"Code": "CLO5", "Description": "Formulate real-life scenarios as algorithmic problems"}], "Assessments": [{"Assessment Type": "Assignment", "Assessment Name": "Homework 1", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Homework 2", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Mid-term Exam", "Weighting (%)": "40"}, {"Assessment Type": "Examination", "Assessment Name": "Final Exam", "Weighting (%)": "40"}], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP3121 Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Equivalents", "Related Course": "COMP3821 Extended Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9101 Design and Analysis of Algorithms 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3121 Algorithms and Programming Techniques 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3821 Extended Algorithms and Programming Techniques 2021.01"}], "Handbook Information": {"Title": "COMP9801 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9801"}}, {"Course Code": "COMP9814", "Course Name": "Extended Artificial Intelligence", "Course Name - SiMs": "Ext Artificial Intelligence", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "As for COMP9414 but in greater depth and breadth.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020119 Artificial Intelligence", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-IN", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Intensive BLENDED-ST Blended in-person / online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Equivalents", "Related Course": "COMP9414 Artificial Intelligence 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9414 Artificial Intelligence 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3411 Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3411 Artificial Intelligence 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9414 Artificial Intelligence 2021.01"}], "Handbook Information": {"Title": "COMP9814 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs3411/"}}, {"Course Code": "COMP9844", "Course Name": "Extended Neural Networks and Deep Learning", "Course Name - SiMs": "Ext Neural Nets, Deep Learning", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate\nPostgraduate", "Course Description for Handbook": "As for COMP9444 but in greater depth and breadth.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020113 Networks and Communications", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly) ONLINE-ST Fully online Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "ZZEN9444 Neural Networks, Deep Learning 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9444 Neural Networks and Deep Learning 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP9444 Neural Networks and Deep Learning 2021.01"}], "Handbook Information": {"Title": "COMP9844 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9844"}}, {"Course Code": "COMP9900", "Course Name": "Information Technology Project", "Course Name - SiMs": "Info Tech Project", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "A capstone software project. Students work in teams to define, implement and evaluate a real-world software system. Most of the work in this course is team-based project work, although there are some introductory lectures on software project management and teamwork strategies. Project teams meet weekly with project mentors to report on the progress of the project. Assessment is based on a project proposal, progressive demonstrations and retrospectives, a final project demonstration and report, and on the quality of the software system itself. Students are also required to reflect on their work and to provide peer assessment of their team-mates' contributions to the project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "029900 Other Information Technology", "Field of Education (Detailed)": "029999 Information Technology not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "Since the course is primarily project based, there will only be a few lectures at the start of the course to explain the projects, to review software project management, to discuss teamwork issues, and to discuss professionalism in the IT workplace.\nThe remainder of the course will be groups working on their projects, with weekly meetings with a group mentor.", "Course Aims": "This course aims to produce students who can apply their computing knowledge and skills to work effectively as IT professionals.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to work from a set of requirements, elaborate them, and produce a specification"}, {"Code": "CLO2", "Description": "be able to design and build a correct, efficient and robust software system from a specification"}, {"Code": "CLO3", "Description": "be able to use software development and software project management tools"}, {"Code": "CLO4", "Description": "be able to validate the correctness and robustness of software"}, {"Code": "CLO5", "Description": "be able to work effectively in a project team, and lead when required"}, {"Code": "CLO6", "Description": "be able to manage their time effectively, and make reasoned trade-offs over competing demands"}, {"Code": "CLO7", "Description": "be able to communicate technical information clearly, both verbally and in writing"}], "Assessments": [{"Assessment Type": "Report", "Assessment Name": "PROJECT PROPOSAL", "Weighting (%)": "10"}, {"Assessment Type": "Other", "Assessment Name": "Software Quality", "Weighting (%)": "40"}, {"Assessment Type": "Other", "Assessment Name": "PARTICIPATION", "Weighting (%)": "20"}, {"Assessment Type": "Other", "Assessment Name": "Progressive Checkpoints", "Weighting (%)": "30"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9596 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9993 Research Project C 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3900 Computer Science Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9945 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9992 Research Project B 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP3900 Computer Science Project 2021.01"}], "Handbook Information": {"Title": "COMP9900 Course Outline", "URL": "http://www.cse.unsw.edu.au/~cs9900/"}}, {"Course Code": "COMP9901", "Course Name": "Research Thesis Computer Science and Engineering Part-Time", "Course Name - SiMs": "P/T Res. Thesis Comp Sci & Eng", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Research course", "Academic Calendar Type": "Research", "Career": "Research", "Course Description for Handbook": "", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9902", "Course Name": "Research Thesis Computer Science and Engineering Full-Time", "Course Name - SiMs": "Res. Thesis Comp Sci & Eng F/T", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "12", "Grading Basis": "Research course", "Academic Calendar Type": "Research", "Career": "Research", "Course Description for Handbook": "", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "031300 Electrical and Electronic Engineering and Technology", "Field of Education (Detailed)": "031305 Computer Engineering", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "RESEARCH-ST", "Delivery Mode": "Independent research", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9930", "Course Name": "Readings in Computer Science and Engineering", "Course Name - SiMs": "Readings in Comp Sci and Eng", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Satisfactory/Unsatisfactory", "Academic Calendar Type": "Research", "Career": "Research", "Course Description for Handbook": "A seminar course analysing topical research papers in computer science and engineering. Each participating student will be assigned a small number of related recent research paper. These papers will be in the general area of the students' PhD research topic. The student will do a critical analysis of the papers and present it in a report and a seminar. At the seminar the student's analysis are discussed with peers and academic staff. The purpose is to help the student get started in the field, and learn to analyse and constructively criticise others' research. \nNote(s): CSE Research Students Only", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "020199 Computer Science not elsewhere classified", "Level": "", "Teaching Strategies and Rationale": "", "Course Aims": "", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "No", "Delivery Name": "", "Delivery Mode": "", "Delivery Format": "", "Learning Outcomes": [], "Assessments": [], "Relationships": [], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9991", "Course Name": "Research Project A", "Course Name - SiMs": "Research Project A", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Students in their final terms of study in MIT (8543) have the option of replacing some coursework with a research project, carried out under the supervision of a CSE academic staff member. This forms the first of a two-part sequence of courses. By the end of the term the student should have researched the problem, identified current approaches, developed a plan to complete the project, and carried out some of that plan. The student must demonstrate this in a formal seminar presented in week 9 of the term.\nNote thatEnrolment is subject to meeting the following criteria:\ncompleted (or have advanced standing in) 66 UOC; and\nobtained agreement from a CSE academic supervisor; and\nmaintained a distinction level performance in the program\nNote: students who successfully complete a research project aretake COMP9991 must also take COMP9992 or COMP9993. They do not required to take COMP9900 Information Technology Project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Supervisors determine this.", "Course Aims": "This course aims for students to commence study on a research topic mutually agreed with a CSE academic supervisor. By the end of the term they need to present: a review of the topic, including current approaches, a plan for future work, and have made some progress towards carrying out that plan.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to carry out a literature survey on a specified research problem"}, {"Code": "CLO2", "Description": "be able to plan a research project (under supervision)"}, {"Code": "CLO3", "Description": "be able to present their work via a live presentation"}, {"Code": "CLO4", "Description": "be able to conduct research (under supervision)"}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "First Term Seminar", "Weighting (%)": "100"}], "Relationships": [{"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9993 Research Project C 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9992 Research Project B 2021.01"}], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9992", "Course Name": "Research Project B", "Course Name - SiMs": "Research Project B", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Students in their final terms of study in MIT (8543) have the option of replacing some coursework with a research project, carried out under the supervision of a CSE academic staff member. This forms the second of a two-part sequence of courses. By the end of the second term, the student should have carried out the research work and produced some results. The student must demonstrate this in a formal seminar presented in week 10 of the term and via a written report.\nNote thatNote: students who successfully complete a research project aretake COMP9992 must also take COMP9991 first. They do not required to take COMP9900 Information Technology Project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Supervisors determine this.", "Course Aims": "This course aims for students to study a research topic, generate some results, and both present a seminar and write a research report on the work.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to carry out a literature survey on a specified research problem"}, {"Code": "CLO2", "Description": "be able to present the results of research work both orally and in written form"}, {"Code": "CLO3", "Description": "be able to conduct research (under supervision)"}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "Second Term Seminar", "Weighting (%)": "25"}, {"Assessment Type": "Report", "Assessment Name": "Final Report", "Weighting (%)": "75"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP3900 Computer Science Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9596 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9993 Research Project C 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9945 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9900 Information Technology Project 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9991 Research Project A 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9993 Research Project C 2021.01"}], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "COMP9993", "Course Name": "Research Project C", "Course Name - SiMs": "Research Project C", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "12", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Postgraduate", "Course Description for Handbook": "Students in their final terms of study in MIT (8543) have the option of replacing some coursework with a research project, carried out under the supervision of a CSE academic staff member. This forms the second of a two-part sequence of courses. By the end of the second term, the student should have carried out the research work and produced some results. The student must demonstrate this in a formal seminar presented in week 10 of the term and via a written report.\nNote thatNote: students who successfully complete a research project aretake COMP9993 must also take COMP9991 first. They do not required to take COMP9900 Information Technology Project.", "Field of Education (Broad)": "020000 Information Technology", "Field of Education (Narrow)": "020100 Computer Science", "Field of Education (Detailed)": "000000 Not Applicable", "Level": "", "Teaching Strategies and Rationale": "Supervisors determine this.", "Course Aims": "This course aims for students to study a research topic, generate some results, and both present a seminar and write a research report on the work.", "Delivery Attributes": "", "Course Type": "Award course", "Course Attributes": "", "Repeat for Credit": "Yes", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO1", "Description": "be able to carry out a literature survey on a specified research problem"}, {"Code": "CLO2", "Description": "be able to present the results of research work both orally and in written form"}, {"Code": "CLO3", "Description": "be able to conduct research (under supervision)"}], "Assessments": [{"Assessment Type": "Presentation", "Assessment Name": "Second Term Seminar", "Weighting (%)": "25"}, {"Assessment Type": "Report", "Assessment Name": "Final Report", "Weighting (%)": "75"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP9992 Research Project B 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9900 Information Technology Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP3900 Computer Science Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9596 Research Project 2021.01"}, {"Relationship Type": "Exclusions", "Related Course": "COMP9945 Research Project 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9992 Research Project B 2021.01"}, {"Relationship Type": "Multi-Term Course Group", "Related Course": "COMP9991 Research Project A 2021.01"}], "Handbook Information": {"Title": "", "URL": ""}}, {"Course Code": "ENGG1811", "Course Name": "Computing for Engineers", "Course Name - SiMs": "Computing for Engineers", "Owning Faculty": "Faculty of Engineering", "Owning Academic Unit": "School of Computer Science and Engineering", "Collaborating Academic Unit": "", "Administrative Campus": "Sydney", "Units of Credit": "6", "Grading Basis": "Standard UNSW grades", "Academic Calendar Type": "3+", "Career": "Undergraduate", "Course Description for Handbook": "The objective of this course is for students to acquire computing skills for solving problems in engineering. The course will develop the students' proficiency in a high level programming language and in using programming for problem solving. Topics: algorithms, program structure (statements, selection, iteration, functions), data types, arrays and matrices, reading and writing files, testing, code quality, simulation, animation, visualisation. The course includes practical work in labs and programming projects. ", "Field of Education (Broad)": "030000 Engineering and Related Technologies", "Field of Education (Narrow)": "039900 Other Engineering and Related Technologies", "Field of Education (Detailed)": "039999 Engineering and Related Technologies not elsewhere classified", "Level": "Level 1", "Teaching Strategies and Rationale": "Lectures will be used to present the theory and practice of the techniques and tools in this course. There will be extensive use of practical demonstrations during lectures. Examples are real-world where possible, drawn from many disciplines of engineering but without requiring domain knowledge that students do not yet have.\nThe laboratory program fosters skills development in programming and problem solving. Lab classes are relatively small (18-24 students) and tutors encourage discussion within groups or across the cohort via online forums.", "Course Aims": "The course aims to equip students with the skills required to use programming and computational thinking to solve problems in engineering and related areas, and to assists students in developing familiarity with tools they will use within their own disciplines in later courses.", "Delivery Attributes": "General Education", "Course Type": "Award course", "Course Attributes": "Introductory Course", "Repeat for Credit": "No", "Delivery Name": "BLENDED-ST", "Delivery Mode": "Blended in-person / online", "Delivery Format": "Standard (usually weekly or fortnightly)", "Learning Outcomes": [{"Code": "CLO2", "Description": " Design, implement, test and debug complete Python progra algorithms to solve specifiedcomputation problems"}, {"Code": "CLO1", "Description": " Understand fundaImplement al syntax and semantics ofgorithms using the Python programming language. "}, {"Code": "CLO3", "Description": "Write Python programs to automate many different tasks"}, {"Code": "CLO3", "Description": "Understand and apply good practice for program organisation and programming style."}, {"Code": "CLO5", "Description": " Ususe the Matlab to solve simple computationaland Excel numerical computation packages to solve problems in engineering  and science"}, {"Code": "CLO4", "Description": "Use spreadsheet applications to solve simple computational problems in engineering and science"}], "Assessments": [{"Assessment Type": "Lab", "Assessment Name": "work Laboratory exercises", "Weighting (%)": "10"}, {"Assessment Type": "Assignment", "Assessment Name": "Programming assignments", "Weighting (%)": "20"}, {"Assessment Type": "Examination", "Assessment Name": "Mid-term test", "Weighting (%)": "10"}, {"Assessment Type": "Examination", "Assessment Name": "Final exam", "Weighting (%)": "60"}], "Relationships": [{"Relationship Type": "Exclusions", "Related Course": "COMP1010 The Art of Computing 2021.01"}, {"Relationship Type": "Jointly Taught", "Related Course": "COMP1081 Harnessing the Power of Information Technology 2021.01"}], "Handbook Information": {"Title": "ENGG1811 Course Outline", "URL": "http://www.cse.unsw.edu.au/~en1811/"}}]